[{"C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\index.js":"1","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\reportWebVitals.js":"2","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\store\\store.js":"3","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\App.js":"4","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\pages\\Login.js":"5","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\pages\\PrivateRoute.js":"6","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\pages\\Equipos.js":"7","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\pages\\Panel.js":"8","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\store\\reducers\\index.js":"9","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\pages\\Main.js":"10","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\services\\AuthService.js":"11","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\store\\actions\\usuarioActions.js":"12","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\wialon\\session.js":"13","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\pages\\MapaOSM.js":"14","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\pages\\MenuAcciones.js":"15","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\store\\actions\\gruposActions.js":"16","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\store\\reducers\\usuarioReducer.js":"17","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\store\\reducers\\gruposReducer.js":"18","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\components\\DesktopContainer.js":"19","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\config\\axios.js":"20","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\store\\types\\index.js":"21","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\pages\\Menu.js":"22","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\pages\\Mapa.js":"23","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\store\\reducers\\unidadesReducer.js":"24","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\store\\actions\\unidadesActions.js":"25","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\pages\\unidadesMapa.js":"26","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\pages\\UnidadesMapa.js":"27","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\config\\errores.js":"28","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\store\\reducers\\tareasReducer.js":"29","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\store\\actions\\tareasActions.js":"30","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\pages\\Reglas\\Reglas.js":"31","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\pages\\Reglas\\NuevaRegla.js":"32","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\pages\\Reglas\\Jobs.js":"33","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\pages\\Reglas\\VerUnidades.js":"34","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\store\\reducers\\CMDSReducer.js":"35","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\store\\actions\\CMDSActions.js":"36","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\pages\\Reglas\\EditarRegla.js":"37"},{"size":711,"mtime":1611943000669,"results":"38","hashOfConfig":"39"},{"size":362,"mtime":1611877484000,"results":"40","hashOfConfig":"39"},{"size":414,"mtime":1611877484000,"results":"41","hashOfConfig":"39"},{"size":878,"mtime":1614233279128,"results":"42","hashOfConfig":"39"},{"size":1278,"mtime":1614236784475,"results":"43","hashOfConfig":"39"},{"size":2574,"mtime":1614284869445,"results":"44","hashOfConfig":"39"},{"size":13560,"mtime":1614321910809,"results":"45","hashOfConfig":"39"},{"size":2420,"mtime":1614237031021,"results":"46","hashOfConfig":"39"},{"size":456,"mtime":1614284480175,"results":"47","hashOfConfig":"39"},{"size":342,"mtime":1611877484000,"results":"48","hashOfConfig":"39"},{"size":849,"mtime":1614289902370,"results":"49","hashOfConfig":"39"},{"size":901,"mtime":1614318092505,"results":"50","hashOfConfig":"39"},{"size":19281,"mtime":1614622380227,"results":"51","hashOfConfig":"39"},{"size":750,"mtime":1614237683908,"results":"52","hashOfConfig":"39"},{"size":7746,"mtime":1614241939840,"results":"53","hashOfConfig":"39"},{"size":5206,"mtime":1614318702295,"results":"54","hashOfConfig":"39"},{"size":1001,"mtime":1614317918257,"results":"55","hashOfConfig":"39"},{"size":1969,"mtime":1614318669473,"results":"56","hashOfConfig":"39"},{"size":535,"mtime":1612798604633,"results":"57","hashOfConfig":"39"},{"size":140,"mtime":1612364995525,"results":"58","hashOfConfig":"39"},{"size":1903,"mtime":1614583638906,"results":"59","hashOfConfig":"39"},{"size":2768,"mtime":1614318926785,"results":"60","hashOfConfig":"39"},{"size":2111,"mtime":1612377895565,"results":"61","hashOfConfig":"39"},{"size":1179,"mtime":1614318305160,"results":"62","hashOfConfig":"39"},{"size":1907,"mtime":1614318428625,"results":"63","hashOfConfig":"39"},{"size":2357,"mtime":1613148708956,"results":"64","hashOfConfig":"39"},{"size":2633,"mtime":1614237148254,"results":"65","hashOfConfig":"39"},{"size":2075,"mtime":1614236595363,"results":"66","hashOfConfig":"39"},{"size":1165,"mtime":1614622532962,"results":"67","hashOfConfig":"39"},{"size":2153,"mtime":1614622218905,"results":"68","hashOfConfig":"39"},{"size":11865,"mtime":1614625382289,"results":"69","hashOfConfig":"39"},{"size":4505,"mtime":1614236282823,"results":"70","hashOfConfig":"39"},{"size":2125,"mtime":1614625266418,"results":"71","hashOfConfig":"39"},{"size":7986,"mtime":1614622770664,"results":"72","hashOfConfig":"39"},{"size":826,"mtime":1614318853861,"results":"73","hashOfConfig":"39"},{"size":1129,"mtime":1614318889595,"results":"74","hashOfConfig":"39"},{"size":8797,"mtime":1614665440476,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"lu8yv8",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"78"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"78"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"78"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"78"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"78"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"127","messages":"128","errorCount":13,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"133","messages":"134","errorCount":3,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"78"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"78"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\index.js",[],["159","160"],"C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\reportWebVitals.js",[],"C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\store\\store.js",[],"C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\App.js",[],"C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\pages\\Login.js",["161"],"import React, { useEffect } from 'react';\nimport AuthService from \"../services/AuthService\";\nimport { useDispatch } from \"react-redux\";\nimport { saveTokenAction } from \"../store/actions/usuarioActions\";\n\n\nimport { useHistory } from \"react-router-dom\";\n\nconst Login = () => {\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const token = AuthService.getToken();\n    if (token !== null) {\n      dispatch(saveTokenAction(token));\n      history.push('/');  \n    }\n  },[])\n\n  window.onmessage = function (e) {\n    var msg = e.data;\n    if (typeof msg == \"string\" && msg.indexOf(\"access_hash=\") >= 0) {\n      var token = msg.replace(\"access_hash=\", \"\");\n      AuthService.saveToken(token);\n      dispatch( saveTokenAction(token) );\n      history.push('/');\n    }\n    //acces_type:256\n  };\n  return (\n    <div>\n        <iframe\n        id=\"iframeInicio\"\n        src=\"http://gps.intralix.com/login.html?client_id=myApp&access_type=0xFFFFFFFF&activation_time=0&duration=604800&flags=0xFFFFFFFF&response_type=hash&redirect_uri=http://gps.intralix.com/post_token.html\"\n        title=\"Inline Frame Example\"\n        width=\"500\"\n        height=\"500\"\n        style={{border: \"transparent\"}}\n        ></iframe>\n    </div>\n  )\n}\n\nexport default Login;\n","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\pages\\PrivateRoute.js",["162"],"import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport wialon from \"../wialon/session\";\r\n\r\nimport AuthService from \"../services/AuthService\";\r\nimport { saveTokenAction, saveUserAction } from \"../store/actions/usuarioActions\";\r\nimport { getGroupsAction } from \"../store/actions/gruposActions\";\r\nimport { getUnitsAction } from \"../store/actions/unidadesActions\";\r\nimport { getJobsAction } from \"../store/actions/tareasActions\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { logoutAction } from \"../store/actions/usuarioActions\";\r\nimport { getCMDSUnitsAction } from \"../store/actions/CMDSActions\";\r\nimport preloader from \"../img/preloader.svg\";\r\n\r\nconst PrivateRoute = ({ component: Component}) => {\r\n  \r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  \r\n  let wialonObjeto = null;\r\n  const wialonLogin = (token) => {\r\n    wialonObjeto = new wialon(token);\r\n    let iniciar = new Promise((resolve, reject) => {\r\n      wialonObjeto.login( function(data) {\r\n        if (data.error) {\r\n          AuthService.logout();\r\n          dispatch( logoutAction() );\r\n          history.push('/login');\r\n            reject(\"¡Error\");\r\n        } else {\r\n            resolve(\"¡Éxito!\");\r\n        }\r\n      });\r\n\r\n    });\r\n    iniciar.then(() => {\r\n        wialonObjeto.showUnits();\r\n        dispatch(getJobsAction(wialonObjeto));\r\n        dispatch(saveUserAction(wialonObjeto));\r\n        dispatch(getGroupsAction(wialonObjeto));\r\n        dispatch(getUnitsAction(wialonObjeto));\r\n        dispatch(getCMDSUnitsAction(wialonObjeto));\r\n        setLoading(true);\r\n    });\r\n  }\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const loadingGrupos = useSelector(state => state.grupos.loading)\r\n  const loadingUnidades = useSelector(state => state.unidades.loading);\r\n  const loadingJobs = useSelector(state => state.tareas.loading);\r\n\r\n  const [token] = useState( () => {\r\n    const token2 = AuthService.getToken();\r\n    console.log(\"entro\")\r\n    dispatch(saveTokenAction(token2));\r\n    wialonLogin(token2);\r\n    return token2;\r\n  });\r\n\r\n  return (\r\n    <Route render={\r\n        (props) => (\r\n          token !== null ? \r\n            loading && !loadingGrupos && !loadingUnidades && !loadingJobs ?\r\n              <Component {...props} />\r\n              :\r\n              <img src={preloader} />\r\n          :\r\n            <Redirect to='/login' />\r\n    )} />\r\n\r\n  )\r\n}\r\nexport default PrivateRoute;\r\n//export default connect(mapStateToProps)(PrivateRoute)\r\n","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\pages\\Equipos.js",["163","164","165","166"],"import React, { useState, useEffect } from 'react';\r\nimport Main from './Main';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Card, Container, Row, Col, Form, Spinner } from 'react-bootstrap';\r\nimport { FaLock, FaSearch } from 'react-icons/fa';\r\nimport { addUnitsGroupAction, createGroupAction, deleteGroupAction } from \"../store/actions/gruposActions\";\r\n\r\nconst Equipos = () => {\r\n    const dispatch = useDispatch();\r\n    const unidades = useSelector(state => state.usuario.user.unidades);\r\n    const [unidadesModal,setUnidadesModal] = useState(useSelector(state => state.usuario.user.unidades)) \r\n    const grupos = useSelector(state => state.grupos.grupos);\r\n    const loadingEquipos = useSelector(state => state.grupos.loadingEquipos);\r\n    const wialonObject = useSelector(state => state.usuario.user);\r\n    const [ unidadesGrupo, setUnidadesGrupo ] = useState(grupos[0] === undefined ? [] : grupos[0].d.u);\r\n    const [ tituloGrupo, setTituloGrupo ] = useState(grupos[0] === undefined ? \"\" : grupos[0].d.nm);\r\n    const [ idGroup, setIdGroup] = useState(grupos[0] === undefined ? null : grupos[0].d.id);\r\n    const [ flagCreateGroup, setFlagCreateGroup ] = useState(false);\r\n    const [ cofirmDelete, setCofirmDelete ] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (!loadingEquipos) {\r\n            setFlagCreateGroup(false);\r\n            \r\n        }\r\n        if(!cofirmDelete){\r\n            setCofirmDelete(false);\r\n            //setTituloGrupo(grupos[0].d.nm);\r\n            //setUnidadesGrupo(grupos[0].d.u);\r\n        }\r\n    }, [grupos]);\r\n    const drag = e => {\r\n        e.dataTransfer.setData(\"text\", e.target.id);\r\n    }\r\n    const drop = e => {\r\n        e.preventDefault();\r\n        const data = e.dataTransfer.getData(\"text\");\r\n        var repite = unidadesGrupo.filter(unidad => parseInt(data) === unidad );\r\n        if (repite.length <= 0) {\r\n            setUnidadesGrupo([...unidadesGrupo,parseInt(data)]);\r\n        }\r\n        unidades.map(unidadGrupo => {\r\n            const UC = document.getElementById(\"checbokUnidadGrupo\" + unidadGrupo);\r\n            if (UC !== null) {\r\n                if (UC.checked) {\r\n                    repite = unidadesGrupo.filter(unidad => parseInt(unidadGrupo) === unidad );\r\n                    if (repite.length <= 0) {\r\n                        setUnidadesGrupo([...unidadesGrupo,parseInt(unidadGrupo)]);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n    const dropUnidades = e => {\r\n        e.preventDefault();\r\n        const data = e.dataTransfer.getData(\"text\");\r\n        let newGrupo = unidadesGrupo.filter(grupo => grupo !== parseInt(data) )\r\n        unidadesGrupo.map(unidad => {\r\n            const UC = document.getElementById(\"checbokUnidadGrupo\" + unidad).checked;\r\n            console.log(UC);\r\n            if (UC) {\r\n                newGrupo = newGrupo.filter(grupo => grupo !== parseInt(unidad) )\r\n            }\r\n        });\r\n        setUnidadesGrupo(newGrupo);\r\n    }\r\n    const allowDrop = e => {\r\n        e.preventDefault();\r\n    }\r\n    const selectGrupo = e => {\r\n        const se = document.getElementById(e.target.id);\r\n        const idGrupo = se.options[se.selectedIndex].id;\r\n        const newGrupo = grupos.filter(grupo => grupo.d.id === parseInt(idGrupo) )\r\n        setUnidadesGrupo(newGrupo[0].d.u);\r\n        setTituloGrupo(newGrupo[0].d.nm);\r\n        setIdGroup(newGrupo[0].d.id);\r\n    };\r\n    const addUnitsGroup = e => {\r\n        e.preventDefault();\r\n        dispatch(addUnitsGroupAction(unidadesGrupo,idGroup,wialonObject));\r\n    }\r\n    const addGroupModal = e => {\r\n        e.preventDefault();\r\n        setFlagCreateGroup(true);\r\n        setTituloGrupo(\"\");\r\n        setUnidadesGrupo([]);\r\n    }\r\n    const cancelGroup = e => {\r\n        e.preventDefault();\r\n        setFlagCreateGroup(false);\r\n        setTituloGrupo(grupos[0].d.nm);\r\n        setUnidadesGrupo(grupos[0].d.u);\r\n    }\r\n    const nameGroupChange = e => {\r\n        e.preventDefault();\r\n        setTituloGrupo(e.target.value);\r\n    }\r\n    const addGroup = e => {\r\n        e.preventDefault();\r\n        dispatch(createGroupAction(unidadesGrupo,tituloGrupo,wialonObject));\r\n    }\r\n    const confirmDelete = e => {\r\n        e.preventDefault();\r\n        setCofirmDelete(true);\r\n    }\r\n    const cancelDelete = e => {\r\n        e.preventDefault();\r\n        setCofirmDelete(false);\r\n    }\r\n    const deleteGroup = e => {\r\n        e.preventDefault();\r\n        dispatch(deleteGroupAction(idGroup,wialonObject));\r\n        setCofirmDelete(false);\r\n    }\r\n    const buscarUnidad = e => {\r\n        e.preventDefault();\r\n        const nombre = e.target.value.toUpperCase();\r\n        const arrayUnidades = [];\r\n        let tempUnidades = unidades;\r\n        tempUnidades.map(unidad => \r\n            {\r\n                if(unidad.nm.toUpperCase().search(nombre) !== -1){\r\n                    arrayUnidades.push({\r\n                        id: unidad.id,\r\n                        nm: unidad.nm\r\n                      });\r\n                }\r\n            }\r\n        );\r\n        setUnidadesModal(arrayUnidades);\r\n    }\r\n    return (\r\n        <Main>\r\n            <Card className=\"text-center\">\r\n                <Card.Header>Grupos</Card.Header>\r\n                <Card.Body>\r\n                    <Card.Title>\r\n                        {\r\n                            tituloGrupo\r\n                        }\r\n                    </Card.Title>\r\n                    <Container>\r\n                        <Row style={{marginBottom:\"20px\"}}>\r\n                            <Col>\r\n                                {\r\n                                    flagCreateGroup ?\r\n                                        <input \r\n                                            id=\"inputGroup-sizing-sm\" \r\n                                            placeholder=\"Nombre del grupo\" \r\n                                            className=\"inputBlack\" \r\n                                            onChange={ e => nameGroupChange(e) }\r\n                                        />\r\n                                    :\r\n                                        (<Form>\r\n                                            <Form.Group controlId=\"exampleForm.SelectCustom\">\r\n                                                <Form.Label>Grupos</Form.Label>\r\n                                                <Form.Control as=\"select\" custom\r\n                                                    onChange={ e => selectGrupo(e) }\r\n                                                >\r\n                                                {\r\n                                                    grupos.map(grupo => (\r\n                                                        <option key={grupo.d.id} id={grupo.d.id} >{grupo.d.nm}</option>\r\n                                                    ))\r\n                                                }\r\n                                                </Form.Control>\r\n                                            </Form.Group>\r\n                                        </Form>)\r\n                                }\r\n                            </Col>\r\n                            <Col>\r\n                                {\r\n                                    flagCreateGroup ?\r\n                                        null\r\n                                    :\r\n                                        <button onClick={ e => confirmDelete(e) }>Eliminar grupo</button>\r\n                                }\r\n                            </Col>\r\n                            <Col>\r\n                                {\r\n                                    flagCreateGroup ?\r\n                                        <button onClick={e => cancelGroup(e) }>Cancelar</button>\r\n                                    :\r\n                                        <button onClick={ e => addGroupModal(e) }>Crear Grupo</button>\r\n                                }\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col onDrop={(e) => dropUnidades(e)} onDragOver={(e) => allowDrop(e)}>\r\n                                <Card>\r\n                                    <Card.Header>Unidades Disponibles</Card.Header>\r\n                                    <Card.Body style={{ maxHeight:\"500px\", overflowY:\"auto\"}} >\r\n                                        <Card.Title><input onChange={ e => buscarUnidad(e) } id=\"inputGroup-sizing-sm\" className=\"inputBlack\" /><FaSearch /></Card.Title>\r\n                                        <div id=\"UnidadesDiv\">\r\n                                            {\r\n                                                unidadesModal.map(unidad => (\r\n                                                    <div \r\n                                                        key={\"U\" + unidad.id} \r\n                                                        id={unidad.id} \r\n                                                        draggable=\"true\" \r\n                                                        style={{cursor: \"pointer\", borderStyle:\"outset\", marginTop:\"5px\"}} \r\n                                                        onDragStart={e => drag(e)} \r\n                                                    >\r\n                                                        <span><FaLock size={20} /> Unidad: {unidad.nm}</span>\r\n                                                        <input className=\"checbokUnidad\" type=\"checkbox\"  />\r\n                                                        <br></br>\r\n                                                    </div>\r\n                                                ))\r\n                                            }\r\n                                        </div>\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            </Col>\r\n                            <Col onDrop={(e) => drop(e)} onDragOver={(e) => allowDrop(e)}>\r\n                                <Card >\r\n                                    <Card.Header>Unidades Grupo: {tituloGrupo}</Card.Header>\r\n                                    <Card.Body style={{ maxHeight:\"500px\", overflowY:\"auto\"}} >\r\n                                        <div id=\"GrupoDiv\" >\r\n                                            {\r\n                                                unidadesGrupo.map(unidad => (\r\n                                                    <div \r\n                                                        key={\"G\"+unidad} \r\n                                                        id={unidad} \r\n                                                        draggable=\"true\" \r\n                                                        style={{cursor: \"pointer\", borderStyle:\"outset\", marginTop:\"5px\"}} \r\n                                                        onDragStart={e => drag(e)} \r\n                                                    >\r\n                                                        <span><FaLock size={20} /> Unidad: {(unidades.filter(unidad2 => unidad === unidad2.id))[0].nm}</span>\r\n                                                        <input className=\"checbokUnidad\" id={\"checbokUnidadGrupo\"+unidad} type=\"checkbox\"  />\r\n                                                        <br></br>\r\n                                                    </div>\r\n                                                ))\r\n                                            }\r\n                                        </div>\r\n                                    </Card.Body>\r\n                                    <Card.Footer>\r\n                                        {\r\n                                            flagCreateGroup ?\r\n                                                <button style={{float:\"right\"}} onClick={e => addGroup(e)}>Guardar grupo</button>\r\n                                            :\r\n                                                <button style={{float:\"right\"}} onClick={e => addUnitsGroup(e)}>Guardar</button>\r\n                                        }\r\n                                    </Card.Footer>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                        </Container>\r\n                </Card.Body>\r\n                <Card.Footer className=\"text-muted\">Intralix</Card.Footer>\r\n            </Card>\r\n            {\r\n                loadingEquipos ?\r\n                    <Container className=\"popoverPanale\">\r\n                        <Spinner animation=\"border\" role=\"status\" style={{margin: \"50px\"}}>\r\n                            <span className=\"sr-only\">Loading...</span>\r\n                        </Spinner>\r\n                    </Container>\r\n                :\r\n                    null\r\n            }\r\n            {\r\n                cofirmDelete ? \r\n                    <Container className=\"popoverPanale\">\r\n                        <Card style={{ width: '18rem', marginTop:\"10px\" }}>\r\n                            <Card.Body>\r\n                                <Card.Text>Se eliminara el grupo <b>{tituloGrupo}</b></Card.Text>\r\n                                <button style={{float:\"right\"}} onClick={ e => deleteGroup(e) } >Confirmar</button>\r\n                                <button style={{float:\"left\"}} onClick={ e => cancelDelete(e) }>Cancelar</button>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Container>\r\n                :\r\n                    null\r\n            }\r\n        </Main>     \r\n    );\r\n}\r\n \r\nexport default Equipos;\r\n","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\pages\\Panel.js",[],"C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\store\\reducers\\index.js",[],"C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\pages\\Main.js",[],"C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\services\\AuthService.js",[],"C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\store\\actions\\usuarioActions.js",[],"C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\wialon\\session.js",["167"],"import W from 'wialonjs-api/dist/wialon-src'\nexport default class wialon {\n    session = null;\n    constructor(token){\n        this.token = token;\n        this.usuario = null;\n        this.unidades = [];\n        this.grupos = [];\n        this.sid = null;\n    }\n    login(callback){\n        let iniciar = new Promise((resolve, reject) => {\n            W.debug = true;\n            var self = this;\n            let session = self.session;\n            session = new W.Session('http://gps.intralix.com', {\n                eventsTimeout: 5\n            });\n            session\n                .on('lastMessageChanged', function() {\n                    //console.log('lastMessageChanged', arguments);\n                })\n                .on('positionChanged', function() {\n                    //console.log('positionChanged', arguments);\n                })\n                .on('itemChanged', function() {\n                    //console.log('itemChanged', arguments);\n                })\n                .on('itemDeleted', function() {\n                    //console.log('itemDeleted', arguments);\n                });\n            const StorageSID = localStorage.getItem('sid');\n            \n            if (!StorageSID) {\n                session.execute('core/use_auth_hash', {authHash: this.token}, function(data) {        \n                    var params = {\n                        params:{\"operateAs\":\"\",continueCurrentSession:true,checkService:\"auto.wialon_web.0\",restore:1,appName:\"myApp\"},\n                        sid:  session.getSid()\n                    }\n                    session.execute('core/duplicate', params, function(data) {\n                        //{\"operateAs\":\"\",\"continueCurrentSession\":true,\"checkService\":\"auto.wialon_web.0\",\"restore\":1,\"appName\":\"myApp\"}\n                        localStorage.setItem('sid', session.getSid());\n                        self.sid = session.getSid();\n                        self.usuario = data;\n                        /**inicio */\n                        var params = {spec:[{'type': 'type', 'data': 'avl_unit', 'flags': 0x401, 'mode': 0}]};\n                        // load items to current session\n                        session.execute('core/update_data_flags', params, function (data) {\n                            self.session = session;\n                            if (data.error) {\n                                reject(\"¡Error\");\n                                callback(data);\n                            } else {\n                                resolve(\"¡Éxito!\");\n                                callback(data);\n                            }\n                        }); \n                        \n                    });\n                });\n            }else{\n                self.sid = StorageSID;\n                var params = {\n                    params:{\n                        \"operateAs\":\"\",\n                        \"continueCurrentSession\":true,\n                        \"checkService\":\"auto.wialon_web.0\",\n                        \"restore\":1,\n                        \"appName\":\"myApp\"\n                    },\n                    sid: self.sid\n                }\n                session.execute('core/duplicate', params, function(data) {\n                    \n                    localStorage.setItem('sid', session.getSid());\n                    self.sid = session.getSid();\n                    self.usuario = data;\n                    /**inicio */\n                    var params = {spec:[{'type': 'type', 'data': 'avl_unit', 'flags': 0x401, 'mode': 0}]};\n                    // load items to current session\n                    session.execute('core/update_data_flags', params, function (data) {\n                        self.session = session;\n                        if (data.error) {\n                            reject(\"¡Error\");\n                            callback(data);\n                        } else {\n                            resolve(\"¡Éxito!\");\n                            callback(data);\n                        }\n                    }); \n                    \n                });\n            }\n\n        });\n\n        iniciar.then(() => {\n            //console.log(this.session);\n        });\n    }\n    showUnits(){\n        this.unidades = this.session.getItems() === undefined ? [] : this.session.getItems();\n        this.unidades.filter(unidad => (unidad.lmsg !== null || unidad.lmsg !== undefined))\n    }\n    getCMDS(callback){\n        //obtener lista de comandos\n        const self = this;\n        new Promise(()=>{\n            var params = {\n                \"params\" : [],\n                \"sid\": self.sid\n            }\n            self.unidades.forEach(unidad => {\n                params.params.push(\n                {\n                    \"svc\":\"core/search_item\",\n                    \"params\":{\n                        \"id\":unidad.id,\n                        \"flags\":4294967295\n                    }\n                })\n            });\n            self.session.execute('core/batch&sid=' + self.sid, params, function(data) {\n                console.log(\"cmds\");\n                if (data.error) {\n                    callback(data);\n                } else {\n                    const unidadesCMDS = [];\n                    data.forEach(unidad => {\n                        if (unidad.item.cmds !== undefined) {\n                            unidadesCMDS.push({\n                                id:unidad.item.id,\n                                n:unidad.item.nm,\n                                cmds:unidad.item.cmds\n                            });\n                            /*\n                            unidad.item.cmds.forEach(comando => {\n                                if (comando.n === \"Posición\") {unidadesCMDS\n                                    console.log(unidad);\n                                    //console.log(unidad.item.nm);\n                                    console.log(comando);\n                                }\n                            });\n                            */\n                        }\n                    });\n                    callback(unidadesCMDS);\n                }\n            });\n        })\n    }\n    getJobs(callback){\n        const self = this;\n        new Promise(() => {\n            var params = {\n                params:{\n                    \"itemId\":105,\n                    \"col\":[7,8]\n                }\n            };\n            self.session.execute('resource/get_job_data', params, function (data) {\n                if (data.error) {\n                    callback(data);\n                } else {\n                    const reglasArray = [];\n                    data.forEach(tarea => {\n                        const id = tarea.id;\n                        const dias = obtenerDias(tarea.sch.w);\n                        const nombre = tarea.n;\n                        const comando = tarea.act.p.cmd_name;\n                        const comandoTipo = tarea.act.p.cmd_type;\n                        const unidades = obtenerUnidades(tarea.act.p.units);\n                        const hora = obtenerHora(tarea.r);\n                        const fecha = obtenerFecha(tarea.at);\n                        const estado = tarea.st.e;\n                        reglasArray.push({dias,nombre,comando,hora,unidades,estado,id,fecha,comandoTipo})\n                    });\n                    callback(reglasArray);\n                }\n            });\n        });\n        \n    }\n    editUnitsJob(id,unidades,callback){\n        const self = this;\n        \n        new Promise(()=>{\n            //obtener la tarea\n            var params = {\n                params:{\n                    \"itemId\":105,\n                    \"col\":[id]\n                }\n            };\n            self.session.execute('resource/get_job_data', params, function (data) {\n                console.log(data);\n                if (data.error) {\n                    callback(data);\n                } else {\n                    //editar tarea\n                    data=data[0];\n                    const creatorId = self.usuario.user.id\n                    data.act.p.units = unidades;\n                    Object.assign(data, {itemId: 105,callMode:\"update\"});\n                    var params = {\n                        params:data\n                    };\n                    self.session.execute('resource/update_job', params, function (data) {\n                        console.log(data);\n                        if (data.error) {\n                            callback(data);\n                        } else {\n                            var params = {\n                                params:{\n                                    \"itemId\":105,\n                                    \"col\":[7,8]\n                                }\n                            };\n                            self.session.execute('resource/get_job_data', params, function (data) {\n                                if (data.error) {\n                                    callback(data);\n                                } else {\n                                    const reglasArray = [];\n                                    data.forEach(tarea => {\n                                        const id = tarea.id;\n                                        const dias = obtenerDias(tarea.sch.w);\n                                        const nombre = tarea.n;\n                                        const comando = tarea.act.p.cmd_name;\n                                        const comandoTipo = tarea.act.p.cmd_type;\n                                        const unidades = obtenerUnidades(tarea.act.p.units);\n                                        const hora = obtenerHora(tarea.r);\n                                        const fecha = obtenerFecha(tarea.at);\n                                        const estado = tarea.st.e;\n                                        reglasArray.push({dias,nombre,comando,hora,unidades,estado,id,fecha,comandoTipo})\n                                    });\n                                    callback(reglasArray);\n                                }\n                            });\n                        }\n                    });\n                }\n            });\n        });\n    }\n    showGroups(callback){\n        const self = this;\n        new Promise(() => {\n            var params = {spec:[{'type': 'type', 'data': 'avl_unit_group', 'flags': 0x411, 'mode': 1}]};\n            this.session.execute('core/update_data_flags', params, function (data) {\n                self.grupos = data;\n                if (data.error) {\n                    callback(data);\n                } else {\n                    callback(data);\n                }\n            });\n        });\n    }\n    addUnitsGroup(units,IdGroup,callback){\n        new Promise(() => {\n            const self = this;\n            var req = new W.Request('http://gps.intralix.com');\n            var params = {\n                \"params\":{\n                    \"itemId\": IdGroup, \n                    \"units\": units\n                },\n                \"sid\":self.sid\n            };\n            req.api('unit_group/update_units&sid=' + self.sid, params, function(data) {\n                if (data.error) {\n                    callback(data);\n                } else {\n                    let groups = self.session.getItems(\"avl_unit_group\");\n                    groups = groups.filter(grupo => (grupo.nm === \"Admin\" || grupo.nm === \"Grupo Desarrollo\") );\n                    callback(groups);\n                }\n            });\n        });\n    }\n    createGroup(units,name,callback){\n        new Promise(() => {\n            const self = this;\n            console.log(self.usuario.user.id);\n            const creatorId = self.usuario.user.id\n            var req = new W.Request('http://gps.intralix.com');\n            var params = {\n                \"params\":{\n                    \"creatorId\": creatorId, \n                    \"name\": name,\n                    \"dataFlags\": 1\n                },\n                \"sid\":self.sid\n            };\n            req.api('core/create_unit_group&sid=' + self.sid, params, function(data) {\n                if (data.error) {\n                    callback(data);\n                } else {\n                    callback(data);\n                }\n            });\n        });\n    }\n    addUnitsNewGroup(units,IdGroup,callback){\n        new Promise(() => {\n            const self = this;\n            var req = new W.Request('http://gps.intralix.com');\n            var params = {\n                \"params\":{\n                    \"itemId\": IdGroup, \n                    \"units\": units\n                },\n                \"sid\":self.sid\n            };\n            req.api('unit_group/update_units&sid=' + self.sid, params, function(data) {\n                if (data.error) {\n                    callback(data);\n                } else {\n                    callback(data);\n                }\n            });\n        });\n    }\n    deleteGroup(IdGroup,callback){\n        new Promise(() => {\n            const self = this;\n            var req = new W.Request('http://gps.intralix.com');\n            var params = {\n                \"params\":{\n                    'itemId': IdGroup\n                },\n                \"sid\":self.sid\n            };\n            req.api('item/delete_item&sid=' + self.sid, params, function(data) {\n                if (data.error) {\n                    callback(data);\n                } else {\n                    callback(data);\n                }\n            });\n        });\n    }\n    enviarComando(unidades,comandoString,callback){\n        const self = this;\n        new Promise(() => {\n            var params = {\n                \"params\" : [],\n                \"sid\": self.sid\n            }\n            unidades.forEach(unidad => {\n                params.params.push(\n                    {\n                        \"svc\":\"unit/exec_cmd\",\n                        \"params\":{\n                            \"itemId\":unidad,\n                            \"commandName\":comandoString,\n                            \"linkType\" : \"\",\n                            \"param\" : \"\",\n                            \"timeout\":0,\n                            \"flags\":1\n                        }\n                    })\n            });\n            self.session.execute('core/batch&sid=' + self.sid, params, function(data) {\n                const arrayError = [];\n                for (let i = 0; i < data.length; i++) {\n                    const respuesta = data[i];\n                    const unidad = unidades[i];\n                    if(respuesta.error){\n                        arrayError.push(unidad);\n                    }\n                }\n                if (data.error) {\n                    callback(data,arrayError);\n                } else {\n                    callback(data,arrayError);\n                }\n            });\n        });\n    }\n}\n\nconst obtenerFecha = (fecha) => {\n    var a = new Date(fecha * 1000);\n    var months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\n    var year = a.getFullYear();\n    var month = months[a.getMonth()];\n    var date = a.getDate();\n    var time = date + ' ' + month + ' ' + year;\n    return time;\n}\n\nconst obtenerUnidades = (unidades) => {\n    var unidadesArr = unidades.split(',');\n    const unidadesR = [];\n    unidadesArr.forEach(element => {\n        unidadesR.push(parseInt(element))\n    });\n    return unidadesR;\n}\nconst obtenerHora = (hora) => {\n    var date = hora.substr(2, hora.length);\n    return date;\n}\nconst obtenerDias = (diasJob) => {\n    const arrayDias = [];\n    arrayDiasJobs.forEach(dia => {\n        const diaTemp = diasJob - dia[1];\n        if (diaTemp >= 0) {\n            arrayDias.push(dia[0]);\n            diasJob = diaTemp;\n        }\n    });\n    return arrayDias;\n}\nconst arrayDiasJobs = [\n    [\"Domingo\",64],\n    [\"Sabado\",35],\n    [\"Viernes\",16],\n    [\"Jueves\",8],\n    [\"Miercoles\",4],\n    [\"Martes\",2],\n    [\"Lunes\",1]\n]\n\n//Invoke-WebRequest -Uri \"http://gps.intralix.com/wialon/ajax.html?svc=resource/update_job&sid=1f7b5888b31f65221c3ff2a37d9a6243\" `\n//-Method \"POST\" `\n//-Headers @{\n//\"User-Agent\"=\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 Safari/537.36\"\n//  \"Accept\"=\"*/*\"\n//  \"Origin\"=\"http://gps.intralix.com\"\n//  \"Referer\"=\"http://gps.intralix.com/wialon/post.html\"\n//  \"Accept-Encoding\"=\"gzip, deflate\"\n//  \"Accept-Language\"=\"es-419,es;q=0.9,en;q=0.8\"\n//  \"Cookie\"=\"_gcl_au=1.1.1601771906.1607701582; _ym_d=1611953260; _ym_uid=1611953260214380465; lang=es; _ga=GA1.1.1504113298.1607701583; _ga_KGT7H4QD6P=GS1.1.1613601284.4.0.1613601291.53; wwp=; _ym_isad=2; sessions=888eeae6ad0ca653329fe58520245d5b%2C44c7832d07bce0ab9e7f57129fc45544%2C1f7b5888b31f65221c3ff2a37d9a6243\"\n//} `\n//-ContentType \"application/x-www-form-urlencoded\" `\n//-Body \"params=%7B%22n%22%3A%22Posici%C3%B3n%20Desarrollo%22%2C%22d%22%3A%22tarea%20prueba%20desarrollo%22%2C%22r%22%3A%222%2018000%22%2C%22at%22%3A1613714400%2C%22tz%22%3A-100160608%2C%22l%22%3A%22es%22%2C%22e%22%3A1%2C%22m%22%3A0%2C%22sch%22%3A%7B%22f1%22%3A0%2C%22f2%22%3A0%2C%22t1%22%3A0%2C%22t2%22%3A0%2C%22m%22%3A0%2C%22y%22%3A0%2C%22w%22%3A0%7D%2C%22act%22%3A%7B%22t%22%3A%22exec_unit_cmd%22%2C%22p%22%3A%7B%22units%22%3A%221734%22%2C%22cmd_name%22%3A%22Posici%C3%B3n%22%2C%22cmd_type%22%3A%22custom_msg%22%2C%22cmd_param%22%3A%22AT%2BGTRTO%3Dgv55w%2C1%2C%2C0%2C%2C%2C%2CFFFF%24%22%2C%22link_type%22%3A%22%22%2C%22timeout%22%3A60%7D%7D%2C%22id%22%3A0%2C%22itemId%22%3A105%2C%22callMode%22%3A%22create%22%7D&sid=1f7b5888b31f65221c3ff2a37d9a6243\"\n\n/*\nrequest\n{\n    \"n\": \"Posición Desarrollo\",\n    \"d\": \"tarea prueba desarrollo\",\n    \"r\": \"2 18000\",\n    \"at\": 1613714400,\n    \"tz\": -100160608,\n    \"l\": \"es\",\n    \"e\": 1,\n    \"m\": 0,\n    \"sch\": {\n      \"f1\": 0,\n      \"f2\": 0,\n      \"t1\": 0,\n      \"t2\": 0,\n      \"m\": 0,\n      \"y\": 0,\n      \"w\": 0\n    },\n    \"act\": {\n      \"t\": \"exec_unit_cmd\",\n      \"p\": {\n        \"units\": \"1734\",\n        \"cmd_name\": \"Posición\",\n        \"cmd_type\": \"custom_msg\",\n        \"cmd_param\": \"AT+GTRTO=gv55w,1,,0,,,,FFFF$\",\n        \"link_type\": \"\",\n        \"timeout\": 60\n      }\n    },\n    \"id\": 0,\n    \"itemId\": 105,\n    \"callMode\": \"create\"\n  }\n*/  \n/**\n * response\n[\n  7,\n  {\n    \"id\": 7,\n    \"n\": \"Posición Desarrollo\",\n    \"d\": \"tarea prueba desarrollo\",\n    \"m\": 0,\n    \"st\": {\n      \"e\": 1,\n      \"c\": 0,\n      \"l\": 0\n    },\n    \"act\": \"exec_unit_cmd\",\n    \"ct\": 1613757698,\n    \"mt\": 1613757698\n  }\n]\n */\n\n /**varios dias (lunes, miercoles, jueves)\n  * request\n{\n  \"n\": \"Posición desarrollo 2\",\n  \"d\": \"Tarea desarrollo 2 unidades\",\n  \"r\": \"1 12:00\",\n  \"at\": 1613714400,\n  \"tz\": -100160608,\n  \"l\": \"es\",\n  \"e\": 1,\n  \"m\": 0,\n  \"sch\": {\n    \"f1\": 0,\n    \"f2\": 0,\n    \"t1\": 0,\n    \"t2\": 0,\n    \"m\": 0,\n    \"y\": 0,\n    \"w\": 13\n  },\n  \"act\": {\n    \"t\": \"exec_unit_cmd\",\n    \"p\": {\n      \"units\": \"1028,1447\",\n      \"cmd_name\": \"Posición\",\n      \"cmd_type\": \"query_pos\",\n      \"cmd_param\": \"AT+GTRTO=gv55w,1,,0,,,,FFFF$\",\n      \"link_type\": \"\",\n      \"timeout\": 60\n    }\n  },\n  \"id\": 0,\n  \"itemId\": 105,\n  \"callMode\": \"create\"\n}\n  */\n /**\n  * response\n[\n  8,\n  {\n    \"id\": 8,\n    \"n\": \"Posición desarrollo 2\",\n    \"d\": \"Tarea desarrollo 2 unidades\",\n    \"m\": 0,\n    \"st\": {\n      \"e\": 1,\n      \"c\": 0,\n      \"l\": 0\n    },\n    \"act\": \"exec_unit_cmd\",\n    \"ct\": 1613774353,\n    \"mt\": 1613774353\n  }\n]\n  */","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\pages\\MapaOSM.js",[],"C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\pages\\MenuAcciones.js",["168"],"import React, { useState } from 'react';\r\nimport { ProSidebar, SidebarHeader, SidebarContent, SidebarFooter } from 'react-pro-sidebar';\r\nimport { FaLock, FaArrowAltCircleDown, FaSearch } from 'react-icons/fa';\r\nimport { Accordion, Card, Button, InputGroup, FormControl } from 'react-bootstrap';\r\nimport 'react-pro-sidebar/dist/css/styles.css';\r\nimport { useSelector } from \"react-redux\";\r\nimport Swal from 'sweetalert2';\r\n\r\nconst MenuAcciones = ({grupos, positionCurrentMarket}) => {\r\n  grupos = grupos.filter(grupo => grupo.d.u.length > 0);\r\n  const Toast = Swal.mixin({\r\n    toast: true,\r\n    position: 'top-end',\r\n    showConfirmButton: false,\r\n    timer: 3000,\r\n    timerProgressBar: true,\r\n    didOpen: (toast) => {\r\n      toast.addEventListener('mouseenter', Swal.stopTimer)\r\n      toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n    }\r\n  })\r\n\r\n  let unidades = useSelector(state => state.unidades.unidades);\r\n  const [gruposModal, setGruposModal] = useState(grupos);\r\n  const wialonObject = useSelector(state => state.usuario.user);\r\n\r\n  const buscarUnidad = e => {\r\n    e.preventDefault();\r\n    const nombre = e.target.value.toUpperCase();\r\n    const arrayGrupos = [];\r\n    let tempGrupos = grupos;\r\n    tempGrupos.forEach(grupo => {\r\n      const arrayunidades = [];\r\n      grupo.d.u.forEach(unidadGrupo => {\r\n        unidades.forEach(unidad => {\r\n          if (unidadGrupo === unidad.id) {\r\n            if(unidad.nm.toUpperCase().search(nombre) !== -1){\r\n              arrayunidades.push(unidadGrupo);\r\n            }\r\n          }\r\n        });\r\n      });\r\n      arrayGrupos.push({\r\n        f: grupo.f,\r\n        i: grupo.i,\r\n        d:{\r\n          cls: grupo.d.cls,\r\n          id:grupo.d.id,\r\n          mu: grupo.d.mu,\r\n          nm: grupo.d.nm,\r\n          u:arrayunidades\r\n        }\r\n      });\r\n    });\r\n    setGruposModal(arrayGrupos);\r\n  }\r\n  const addDevice = e => {\r\n    var total=document.getElementsByName(e.target.id).length;\r\n    for(var i=0;i<total;i++){\r\n      document.getElementsByName(e.target.id)[i].checked = e.target.checked;\r\n    }\r\n    //agregar unidades\r\n  }\r\n  const addAllDevices = (e,grupo) => {\r\n    console.log(grupo);\r\n    grupo.d.u.map(unidad => {\r\n      var total=document.getElementsByName(unidad + \"checkbox\").length;\r\n      for(var i=0;i<total;i++){\r\n        document.getElementsByName(unidad + \"checkbox\")[i].checked = e.target.checked;\r\n      }\r\n    })\r\n  }\r\n\r\n  const cmdAlert = (e,comandoString) => {\r\n    e.preventDefault();\r\n    console.log(comandoString);\r\n    const arrayU = [];\r\n    const arrayUID = [];\r\n    let stringU = \"\";\r\n    unidades.forEach(unidad => {\r\n      const chek = document.getElementById(unidad.id+\"checkbox\").checked;\r\n      console.log(chek)\r\n      if (chek) {\r\n        arrayUID.push(unidad.id);\r\n        arrayU.push(unidad.nm);\r\n        stringU +=unidad.nm+\"<br/>\"\r\n      }\r\n    });\r\n    console.log(arrayU);\r\n    if (arrayU.length > 0) {\r\n      Swal.fire({\r\n        title: `Quieres enviar el comando ${comandoString}?`,\r\n        html: `${stringU}`,\r\n        showDenyButton: true,\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#cc3300',\r\n        focusConfirm: false,\r\n        confirmButtonText: `Enviar`,\r\n      }).then((result) => {\r\n        console.log(result)\r\n        if (result.value) {\r\n          //Swal.fire('Comando enviado!', '', 'success')\r\n          Swal.fire('Enviando comando', '', '')\r\n          cmd(arrayUID,comandoString);\r\n          Swal.showLoading();\r\n        } else if (result.dismiss) {\r\n          Swal.fire(`No se envio el comando ${comandoString}`, '', 'info')\r\n        }\r\n      })\r\n    }else{\r\n      Toast.fire({\r\n        type: 'warning',\r\n        title: 'Seleccione al menos una unidad'\r\n      })\r\n    }\r\n    \r\n  }\r\n  const cmd = (arrayUID,comandoString) => {\r\n    wialonObject.enviarComando(arrayUID,comandoString,function(data,arrayError) {\r\n      console.log(data);\r\n      if (data.error) {\r\n        Swal.fire('No se envio el comando', '', 'warning')\r\n      } else {\r\n        if (arrayError.length) {\r\n          let unidadesError = \"\";\r\n          arrayError.forEach(unidad => {\r\n            unidadesError +=unidad+\"<br/>\"\r\n          });\r\n          Swal.fire('No se envio el comando a las unidades', unidadesError, 'warning')\r\n        } else {\r\n          Swal.fire('Comando enviado', '', 'success')\r\n        }\r\n      }\r\n    });\r\n  }\r\n  return (\r\n      <>\r\n      <ProSidebar className='sidebaracciones' >\r\n        <SidebarHeader>\r\n          <div className='sidebarMNHeader' >\r\n            <Button variant=\"outline-success\" onClick={ e => cmdAlert(e,\"Posición\") } >Abrir</Button>{' '}\r\n            <Button variant=\"outline-primary\" onClick={ e => cmdAlert(e,\"Posición\") } >Restablecer</Button>{' '}\r\n            <Button variant=\"outline-warning\" onClick={ e => cmdAlert(e,\"Posición\") } >Cerrar</Button>{' '}\r\n            <br></br><br></br>\r\n            <InputGroup onChange={ buscarUnidad } size=\"sm\" className=\"mb-3\">\r\n              <InputGroup.Prepend>\r\n              <InputGroup.Text id=\"inputGroup-sizing-sm\" className=\"iconBuscar\" ><FaSearch /></InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" />\r\n            </InputGroup>\r\n          </div>\r\n        </SidebarHeader>\r\n        <SidebarContent>\r\n          {/**Acordeon que me acumula todo un grupo */}\r\n          {\r\n            gruposModal.map(grupo => (\r\n                grupo.d.u.length > 0 ? \r\n                  (\r\n                    <Accordion key={grupo.d.id + \"G\"} defaultActiveKey=\"0\">\r\n                      <Card>\r\n                          <Card.Header >\r\n                              <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\r\n                                  <FaArrowAltCircleDown />{grupo.d.nm}\r\n                              </Accordion.Toggle>\r\n                              <input className=\"checbokGroup\" type=\"checkbox\" id={grupo.d.id + \"checkbox\"} onChange={ (e) => addAllDevices(e,grupo) } />\r\n                          </Card.Header>\r\n                          <Accordion.Collapse eventKey=\"1\">\r\n                              {/**Todas las unidades del grupo */}\r\n                              <Card.Body style={{padding: \"10px 10px 10px 20px\", color: \"#000000\"}}>\r\n                                {\r\n                                  grupo.d.u.map(unidad => (\r\n                                    <span key={unidad + \"MA\"} style={{cursor: \"pointer\"}} onClick={ () => positionCurrentMarket(unidad)}>\r\n                                      <span><FaLock size={20} /> Unidad: {  (unidades.filter(unidad2 => unidad === unidad2.id))[0].nm  }</span>\r\n                                      <input className=\"checbokUnidad\" type=\"checkbox\" id={unidad + \"checkbox\"} name={unidad + \"checkbox\"} onChange={ e => addDevice(e) } />\r\n                                      <br></br>\r\n                                    </span>\r\n                                  ))\r\n                                }\r\n                              </Card.Body>\r\n                          </Accordion.Collapse>\r\n                      </Card>\r\n                    </Accordion>\r\n                  )\r\n                  :\r\n                    null\r\n            ))\r\n          }\r\n        </SidebarContent>\r\n        <SidebarFooter>\r\n          <div className=\"sidebar-btn-wrapper sidebarMNFooter\" >\r\n            <h2>Alertas</h2>\r\n            <p style={{color: \"red\"}}>Unidad: 25789  Sistema violado</p>\r\n            <p style={{color: \"green\"}}>Unidad: 25789  Chapa abierta</p>\r\n            <p style={{color: \"orange\"}}>unidad: 25789  Chapa cerrada</p>\r\n          </div>\r\n        </SidebarFooter>\r\n      </ProSidebar>\r\n     \r\n      </>\r\n    );\r\n}\r\n \r\nexport default MenuAcciones;","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\store\\actions\\gruposActions.js",[],"C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\store\\reducers\\usuarioReducer.js",[],"C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\store\\reducers\\gruposReducer.js",[],"C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\components\\DesktopContainer.js",[],"C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\config\\axios.js",[],["169","170"],"C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\store\\types\\index.js",[],"C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\pages\\Menu.js",[],"C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\pages\\Mapa.js",["171","172","173","174","175","176","177","178","179","180","181","182","183"],"C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\store\\reducers\\unidadesReducer.js",[],"C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\store\\actions\\unidadesActions.js",[],"C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\pages\\unidadesMapa.js",["184","185","186","187","188","189","190","191"],"C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\pages\\UnidadesMapa.js",[],"C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\config\\errores.js",[],"C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\store\\reducers\\tareasReducer.js",[],"C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\store\\actions\\tareasActions.js",[],"C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\pages\\Reglas\\Reglas.js",["192","193"],"import React, { useState } from 'react';\r\nimport { Accordion, Card, Button, Container, Row, Col } from 'react-bootstrap';\r\nimport { FaLock, FaSearch, FaArrowAltCircleDown, FaTasks } from 'react-icons/fa';\r\nimport { useSelector } from \"react-redux\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nimport NuevaRegla from \"./NuevaRegla\";\r\nimport Jobs from \"./Jobs\";\r\nimport VerUnidades from \"./VerUnidades\";\r\nimport EditarRegla from \"./EditarRegla\";\r\nimport Main from '../Main';\r\n\r\nconst Reglas = () => {\r\n    \r\n    const usuario =  useSelector(state => state.usuario);\r\n    let unidades = useSelector(state => state.unidades.unidades);\r\n    let grupos = useSelector(state => state.grupos.grupos);\r\n    grupos = grupos.filter(grupo => grupo.d.u.length > 0);\r\n    const [gruposModal, setGruposModal] = useState(grupos);\r\n    const [nuevaRegla, setNuevaRegla] = useState(false);\r\n    const jobs = useSelector(state => state.tareas.tareas)\r\n    const [jobsModal, setJobsModal] = useState([]); \r\n    const [verUnidades, setVerunidades] = useState(false);\r\n    //const [unidadesJob, setUnidadesJob] = useState([]);\r\n    const [jobId,setJobId] = useState(0);\r\n    const [editarRegla, setEditarRegla] = useState(false);\r\n    \r\n    const buscarUnidad = e => {\r\n        e.preventDefault();\r\n        const nombre = e.target.value.toUpperCase();\r\n        const arrayGrupos = [];\r\n        let tempGrupos = grupos;\r\n        tempGrupos.forEach(grupo => {\r\n          const arrayunidades = [];\r\n          grupo.d.u.forEach(unidadGrupo => {\r\n            unidades.forEach(unidad => {\r\n              if (unidadGrupo === unidad.id) {\r\n                if(unidad.nm.toUpperCase().search(nombre) !== -1){\r\n                  arrayunidades.push(unidadGrupo);\r\n                }\r\n              }\r\n            });\r\n          });\r\n          arrayGrupos.push({\r\n            f: grupo.f,\r\n            i: grupo.i,\r\n            d:{\r\n              cls: grupo.d.cls,\r\n              id:grupo.d.id,\r\n              mu: grupo.d.mu,\r\n              nm: grupo.d.nm,\r\n              u:arrayunidades\r\n            }\r\n          });\r\n        });\r\n        setGruposModal(arrayGrupos);\r\n    }\r\n    const addDevice = e => {\r\n    var total=document.getElementsByName(e.target.id).length;\r\n    for(var i=0;i<total;i++){\r\n        document.getElementsByName(e.target.id)[i].checked = e.target.checked;\r\n    }\r\n    //agregar unidades\r\n    }\r\n    const addAllDevices = (e,grupo) => {\r\n    console.log(grupo);\r\n    grupo.d.u.map(unidad => {\r\n        var total=document.getElementsByName(unidad + \"checkbox\").length;\r\n        for(var i=0;i<total;i++){\r\n        document.getElementsByName(unidad + \"checkbox\")[i].checked = e.target.checked;\r\n        }\r\n    })\r\n    }\r\n    const confirmNuevaRegla = e => {\r\n        e.preventDefault();\r\n        /*\r\n        const arrayU = [];\r\n        const arrayUID = [];\r\n        let stringU = \"\";\r\n        unidades.forEach(unidad => {\r\n            const chek = document.getElementById(unidad.id+\"checkbox\");\r\n            if (chek !== null) {\r\n                //console.log(chek.checked)\r\n                if (chek.checked) {\r\n                    arrayUID.push(unidad.id);\r\n                    arrayU.push(unidad.nm);\r\n                    stringU +=unidad.nm+\"<br/>\"\r\n                }    \r\n            }\r\n            \r\n        });*/\r\n        setNuevaRegla(true);\r\n    }\r\n    const showJobsUnit = (e,unidad) => {\r\n        e.preventDefault();\r\n        console.log(unidad)\r\n        let jobsModalTemp = [];\r\n        jobs.forEach(job => {\r\n            let flag = false;\r\n            job.unidades.forEach(unidadJob => {\r\n                if (unidadJob === unidad) {\r\n                    flag = true;\r\n                }\r\n            });\r\n            if (flag) {\r\n                jobsModalTemp.push(job);\r\n            }\r\n        });\r\n        console.log(jobsModalTemp);\r\n        setJobsModal(jobsModalTemp);\r\n    }\r\n    const showJobsGroup = (e,groupId) => {\r\n        e.preventDefault();\r\n        const currentGroup = grupos.filter(grupo => (grupo.d.id === groupId));\r\n        console.log(currentGroup);\r\n        let jobsModalTemp = [];\r\n        jobs.forEach(job => {\r\n            let flag = false;\r\n            job.unidades.forEach(unidadJob => {\r\n                currentGroup[0].d.u.forEach(unidadesG => {\r\n                    if (unidadJob === unidadesG) {\r\n                        flag = true;\r\n                    } \r\n                });\r\n            });\r\n            if (flag) {\r\n                jobsModalTemp.push(job);\r\n            }\r\n        });\r\n        console.log(jobsModalTemp);\r\n        setJobsModal(jobsModalTemp);\r\n    }\r\n    const unitsJobs = (e,jobId) => {\r\n        e.preventDefault();\r\n        console.log(jobId);\r\n        const unidadesJob = [];\r\n        jobsModal.forEach(job => {\r\n            if (job.id === jobId) {\r\n                job.unidades.forEach(jobU => {\r\n                    const unidad = unidades.filter(unidad => jobU === unidad.id);\r\n                    console.log(unidad)\r\n                    unidadesJob.push({id: unidad[0].id,nm: unidad[0].nm});\r\n                });\r\n            }\r\n        });\r\n        console.log(unidadesJob);\r\n        setJobId(jobId);\r\n        //setUnidadesJob(unidadesJob);\r\n        setVerunidades(true);\r\n    }\r\n    const editJob = (e,jobId) => {\r\n        e.preventDefault();\r\n        setJobId(jobId);\r\n        setEditarRegla(true);\r\n    }\r\n    return ( \r\n        <Main>\r\n            <Container className=\"containerReglas\">\r\n                <Row>\r\n                    <Col xs lg=\"6\">\r\n                        {\r\n                            !verUnidades ?    \r\n                                <Card>\r\n                                    <Card.Body style={{overflowY:\"auto\"}} >\r\n                                        <Card.Title style={{ margin:\"10px 0 10px 0\", textAlign:\"-webkit-right\"}}>\r\n                                            <button onClick={ e => confirmNuevaRegla(e) }>Nueva regla</button>\r\n                                        </Card.Title>\r\n                                        <Card.Title style={{ margin:\"10px 0 10px 0\" }}>\r\n                                            <input onChange={ e => buscarUnidad(e) } id=\"inputGroup-sizing-sm\" className=\"inputBlack\" /><FaSearch />\r\n                                        </Card.Title>\r\n                                        <div style={{overflowY:\"auto\",height: \"800px\"}}>\r\n                                        {\r\n                                            gruposModal.length > 0 ?\r\n                                                gruposModal.map(grupo => (\r\n                                                    grupo.d.u.length > 0 ? \r\n                                                    (\r\n                                                        <Accordion key={grupo.d.id + \"G\"} defaultActiveKey=\"0\">\r\n                                                        <Card>\r\n                                                            <Card.Header style={{textAlign:\"left\"}}>\r\n                                                                <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\r\n                                                                    <FaArrowAltCircleDown />{grupo.d.nm}\r\n                                                                </Accordion.Toggle>\r\n                                                                <span><FaTasks onClick={e => showJobsGroup(e,grupo.d.id)}></FaTasks></span>\r\n                                                                <input className=\"checbokGroup\" type=\"checkbox\" id={grupo.d.id + \"checkbox\"} onChange={ (e) => addAllDevices(e,grupo) } />\r\n                                                            </Card.Header>\r\n                                                            <Accordion.Collapse eventKey=\"1\">\r\n                                                                {/**Todas las unidades del grupo */}\r\n                                                                <Card.Body style={{padding: \"10px 10px 10px 45px\", color: \"#000000\", textAlign:\"left\" }}>\r\n                                                                    {\r\n                                                                        grupo.d.u.map(unidad => (\r\n                                                                            <span key={unidad + \"MA\"} style={{cursor: \"pointer\"}} >\r\n                                                                            <span><FaLock size={20} /> Unidad: \r\n                                                                            {  \r\n                                                                                (unidades.filter(unidad2 => unidad === unidad2.id))[0].nm \r\n                                                                            }</span>\r\n                                                                            <FaTasks onClick={e => showJobsUnit(e,unidad)}></FaTasks>\r\n                                                                            <input className=\"checbokUnidad\" type=\"checkbox\" id={unidad + \"checkbox\"} name={unidad + \"checkbox\"} onChange={ e => addDevice(e) } />\r\n                                                                            <br></br>\r\n                                                                            </span>\r\n                                                                        ))\r\n                                                                    }\r\n                                                                </Card.Body>\r\n                                                            </Accordion.Collapse>\r\n                                                        </Card>\r\n                                                        </Accordion>\r\n                                                    )\r\n                                                    :\r\n                                                        null\r\n                                                ))\r\n                                            :\r\n                                                null\r\n                                        }\r\n                                        </div>\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            :\r\n                                null\r\n                        }\r\n                    </Col>\r\n                    <Col xs lg=\"6\">\r\n                    {\r\n                        nuevaRegla ? \r\n                            <NuevaRegla \r\n                                setNuevaRegla={setNuevaRegla}\r\n                            />\r\n                        :\r\n                            null\r\n                    }\r\n                    {   \r\n                        jobsModal.length > 0 ?\r\n                            <Jobs \r\n                                unitsJobs={unitsJobs}\r\n                                jobsModal={jobsModal}\r\n                                editJob={editJob}\r\n                            />\r\n                        :\r\n                            null\r\n                    }\r\n                    {\r\n                        verUnidades ? \r\n                            <VerUnidades \r\n                                setVerunidades={setVerunidades}\r\n                                jobId={jobId}\r\n                            />\r\n                        :\r\n                            null\r\n                    }\r\n                    {\r\n                        editarRegla ?\r\n                        <EditarRegla \r\n                            jobId={jobId}\r\n                            setEditarRegla={setEditarRegla}\r\n                        />\r\n                        :\r\n                        null\r\n                    }\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            \r\n        </Main>\r\n    );\r\n}\r\n \r\nexport default Reglas;","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\pages\\Reglas\\NuevaRegla.js",[],"C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\pages\\Reglas\\Jobs.js",[],"C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\pages\\Reglas\\VerUnidades.js",["194","195","196","197"],"import React, { useState } from 'react';\r\nimport { Card, Container, Row, Col } from 'react-bootstrap';\r\nimport { FaLock, FaSearch } from 'react-icons/fa';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateUnitsJobsAction } from \"../../store/actions/tareasActions\";\r\n\r\nconst VerUnidades = ({setVerunidades,jobId}) => {\r\n\r\n    let unidades = useSelector(state => state.unidades.unidades);\r\n    let CMDS = useSelector(staet => staet.CMDS.unidadesCMDS);\r\n    const jobs = useSelector(state => state.tareas.tareas)\r\n    const job = jobs.filter(job => job.id === parseInt(jobId));\r\n    const [unidadesJobs,setUnidadesJobs] = useState(job[0].unidades);\r\n    const dispatch = useDispatch();\r\n    const unidadesFiltradas = () => {\r\n        const currentCMDS = [];\r\n        CMDS.map(unidadcmds => {\r\n            const Ccmds = unidadcmds.cmds.filter(cmd => cmd.n === job[0].comando && cmd.c === job[0].comandoTipo);\r\n            if (Ccmds.length > 0) {\r\n                currentCMDS.push({id:unidadcmds.id,nm:unidadcmds.n});\r\n            }\r\n        })\r\n        console.log(currentCMDS);\r\n        return currentCMDS;\r\n        \r\n    };\r\n    const unidadesFinal = unidadesFiltradas();\r\n    const [unidadesModal,setUnidadesModal] = useState(unidadesFiltradas());\r\n    const wialonObject = useSelector(state => state.usuario.user);\r\n\r\n    const buscarUnidadModal = e => {\r\n        e.preventDefault();\r\n        const nombre = e.target.value.toUpperCase();\r\n        let arrayUnidades = [];\r\n        unidadesFinal.map(unidad => {\r\n            if(unidad.nm.toUpperCase().search(nombre) !== -1)\r\n            {\r\n                arrayUnidades.push({\r\n                    id: unidad.id,\r\n                    nm: unidad.nm\r\n                })\r\n            }\r\n        });\r\n        console.log(arrayUnidades);\r\n        setUnidadesModal(arrayUnidades);\r\n    }\r\n    const drag = e => {\r\n        e.dataTransfer.setData(\"text\", e.target.id);\r\n    }\r\n    const allowDrop = e => {\r\n        e.preventDefault();\r\n    }\r\n    const drop = e => {\r\n        e.preventDefault();\r\n        const data = e.dataTransfer.getData(\"text\");\r\n        console.log(unidadesJobs);\r\n        var repite = unidadesJobs.filter(unidad => parseInt(data) === unidad );\r\n        console.log(repite);\r\n        if (repite.length <= 0) {\r\n            setUnidadesJobs([...unidadesJobs,parseInt(data)]);\r\n        }\r\n        console.log(unidades);\r\n        unidades.map(unidadJob => {\r\n            const UC = document.getElementById(\"checboxUnidad\" + unidadJob.id);\r\n            if (UC !== null) {\r\n                console.log(UC);\r\n                if (UC.checked) {\r\n                    repite = unidadesJobs.filter(unidad => parseInt(unidadJob.id) === unidad );\r\n                    if (repite.length <= 0) {\r\n                        setUnidadesJobs([...unidadesJobs,parseInt(unidadJob.id)]);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n    const dropUnidades = e => {\r\n        e.preventDefault();\r\n        \r\n        const data = e.dataTransfer.getData(\"text\");\r\n        let newGrupo = unidadesJobs.filter(grupo => grupo !== parseInt(data) )\r\n        unidadesJobs.map(unidad => {\r\n            const UC = document.getElementById(\"checboxUnidadJob\" + unidad).checked;\r\n            if (UC) {\r\n                newGrupo = newGrupo.filter(grupo => grupo !== parseInt(unidad) )\r\n            }\r\n        });\r\n        setUnidadesJobs(newGrupo);\r\n        \r\n    }\r\n\r\n    const guardarUnidadesTareas = e => {\r\n        e.preventDefault();\r\n        console.log(unidadesJobs);\r\n        console.log(jobId);\r\n        dispatch( updateUnitsJobsAction( jobId,unidadesJobs.join(),wialonObject ) );\r\n        \r\n    }\r\n    return ( \r\n        <Container className=\"popoverPanale\">\r\n            <Card style={{ width: '50rem', marginTop:\"10px\" }}>\r\n                <Card.Body>\r\n                    {/** */}\r\n                    <Row>\r\n                        <Col onDrop={(e) => dropUnidades(e)} onDragOver={(e) => allowDrop(e)}>\r\n                            <Card>\r\n                                <Card.Header>Unidades disponibles</Card.Header>\r\n                                <Card.Body style={{ maxHeight:\"500px\", overflowY:\"auto\"}} >\r\n                                    <Card.Title><input onChange={ e => buscarUnidadModal(e) } id=\"inputGroup-sizing-sm\" className=\"inputBlack\" /><FaSearch /></Card.Title>\r\n                                    <div id=\"UnidadesDiv\">\r\n                                        {\r\n                                            unidadesModal.map(unidad => (\r\n                                                <div \r\n                                                    key={\"Reglas_U\" + unidad.id} \r\n                                                    id={unidad.id} \r\n                                                    draggable=\"true\" \r\n                                                    style={{cursor: \"pointer\", borderStyle:\"outset\", marginTop:\"5px\"}} \r\n                                                    onDragStart={e => drag(e)}     \r\n                                                >\r\n                                                    <span><FaLock size={20} /> Unidad: {unidad.nm}</span>\r\n                                                    <input className=\"checbokUnidad\" id={\"checboxUnidad\"+unidad.id} type=\"checkbox\"  />\r\n                                                    <br></br>\r\n                                                </div>\r\n                                            ))\r\n                                        }\r\n                                    </div>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                        <Col onDrop={(e) => drop(e)} onDragOver={(e) => allowDrop(e)}>\r\n                            <Card >\r\n                                <Card.Header>Unidades tarea</Card.Header>\r\n                                <Card.Body style={{ maxHeight:\"500px\", overflowY:\"auto\"}} >\r\n                                    <div id=\"GrupoDiv\" >\r\n                                        {\r\n                                            unidadesJobs.map(unidad => (\r\n                                                <div \r\n                                                    key={\"Reglas_J\"+unidad} \r\n                                                    id={unidad} \r\n                                                    draggable=\"true\" \r\n                                                    style={{cursor: \"pointer\", borderStyle:\"outset\", marginTop:\"5px\"}}\r\n                                                    onDragStart={e => drag(e)} \r\n                                                >\r\n                                                    <span><FaLock size={20} /> Unidad: {\r\n                                                        \r\n                                                        unidades.filter(unidadG => (unidadG.id === unidad))[0].nm\r\n                                                    }</span>\r\n                                                    <input className=\"checbokUnidad\" id={\"checboxUnidadJob\"+unidad} type=\"checkbox\"  />\r\n                                                    <br></br>\r\n                                                </div>\r\n                                            ))\r\n                                        }\r\n                                    </div>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                    {/** */}\r\n                </Card.Body>\r\n                <Card.Footer>\r\n                        <button style={{float:\"right\"}} onClick={e => guardarUnidadesTareas(e)}>Guardar</button>\r\n                        <button style={{float:\"right\"}} onClick={() => setVerunidades(false)}>Cancelar</button>\r\n                </Card.Footer>\r\n            </Card>\r\n        </Container>\r\n     );\r\n}\r\n \r\nexport default VerUnidades;","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\store\\reducers\\CMDSReducer.js",[],"C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\store\\actions\\CMDSActions.js",[],"C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\pages\\Reglas\\EditarRegla.js",["198"],{"ruleId":"199","replacedBy":"200"},{"ruleId":"201","replacedBy":"202"},{"ruleId":"203","severity":1,"message":"204","line":20,"column":5,"nodeType":"205","endLine":20,"endColumn":7,"suggestions":"206"},{"ruleId":"207","severity":1,"message":"208","line":68,"column":15,"nodeType":"209","endLine":68,"endColumn":38},{"ruleId":"203","severity":1,"message":"210","line":31,"column":8,"nodeType":"205","endLine":31,"endColumn":16,"suggestions":"211"},{"ruleId":"212","severity":1,"message":"213","line":42,"column":34,"nodeType":"214","messageId":"215","endLine":42,"endColumn":36},{"ruleId":"212","severity":1,"message":"213","line":58,"column":34,"nodeType":"214","messageId":"215","endLine":58,"endColumn":36},{"ruleId":"212","severity":1,"message":"213","line":120,"column":33,"nodeType":"214","messageId":"215","endLine":120,"endColumn":35},{"ruleId":"216","severity":1,"message":"217","line":202,"column":27,"nodeType":"218","messageId":"219","endLine":202,"endColumn":36},{"ruleId":"212","severity":1,"message":"213","line":66,"column":26,"nodeType":"214","messageId":"215","endLine":66,"endColumn":28},{"ruleId":"199","replacedBy":"220"},{"ruleId":"201","replacedBy":"221"},{"ruleId":"222","severity":2,"message":"223","line":6,"column":9,"nodeType":"218","messageId":"224","endLine":6,"endColumn":10},{"ruleId":"222","severity":2,"message":"223","line":6,"column":30,"nodeType":"218","messageId":"224","endLine":6,"endColumn":31},{"ruleId":"222","severity":2,"message":"223","line":9,"column":27,"nodeType":"218","messageId":"224","endLine":9,"endColumn":28},{"ruleId":"222","severity":2,"message":"223","line":10,"column":45,"nodeType":"218","messageId":"224","endLine":10,"endColumn":46},{"ruleId":"222","severity":2,"message":"223","line":19,"column":38,"nodeType":"218","messageId":"224","endLine":19,"endColumn":39},{"ruleId":"222","severity":2,"message":"223","line":29,"column":24,"nodeType":"218","messageId":"224","endLine":29,"endColumn":25},{"ruleId":"222","severity":2,"message":"223","line":29,"column":51,"nodeType":"218","messageId":"224","endLine":29,"endColumn":52},{"ruleId":"222","severity":2,"message":"223","line":38,"column":9,"nodeType":"218","messageId":"224","endLine":38,"endColumn":10},{"ruleId":"222","severity":2,"message":"223","line":39,"column":24,"nodeType":"218","messageId":"224","endLine":39,"endColumn":25},{"ruleId":"222","severity":2,"message":"223","line":43,"column":19,"nodeType":"218","messageId":"224","endLine":43,"endColumn":20},{"ruleId":"222","severity":2,"message":"223","line":46,"column":9,"nodeType":"218","messageId":"224","endLine":46,"endColumn":10},{"ruleId":"222","severity":2,"message":"225","line":46,"column":28,"nodeType":"218","messageId":"224","endLine":46,"endColumn":34},{"ruleId":"222","severity":2,"message":"225","line":49,"column":21,"nodeType":"218","messageId":"224","endLine":49,"endColumn":27},{"ruleId":"216","severity":1,"message":"226","line":1,"column":17,"nodeType":"218","messageId":"219","endLine":1,"endColumn":25},{"ruleId":"216","severity":1,"message":"227","line":1,"column":27,"nodeType":"218","messageId":"219","endLine":1,"endColumn":36},{"ruleId":"216","severity":1,"message":"228","line":5,"column":10,"nodeType":"218","messageId":"219","endLine":5,"endColumn":22},{"ruleId":"216","severity":1,"message":"229","line":5,"column":24,"nodeType":"218","messageId":"219","endLine":5,"endColumn":33},{"ruleId":"216","severity":1,"message":"230","line":5,"column":50,"nodeType":"218","messageId":"219","endLine":5,"endColumn":61},{"ruleId":"231","severity":2,"message":"232","line":9,"column":22,"nodeType":"218","endLine":9,"endColumn":33},{"ruleId":"231","severity":2,"message":"233","line":10,"column":22,"nodeType":"218","endLine":10,"endColumn":33},{"ruleId":"222","severity":2,"message":"234","line":30,"column":22,"nodeType":"218","messageId":"224","endLine":30,"endColumn":36},{"ruleId":"216","severity":1,"message":"235","line":15,"column":11,"nodeType":"218","messageId":"219","endLine":15,"endColumn":18},{"ruleId":"212","severity":1,"message":"213","line":67,"column":26,"nodeType":"214","messageId":"215","endLine":67,"endColumn":28},{"ruleId":"212","severity":1,"message":"213","line":17,"column":29,"nodeType":"214","messageId":"215","endLine":17,"endColumn":31},{"ruleId":"212","severity":1,"message":"213","line":35,"column":34,"nodeType":"214","messageId":"215","endLine":35,"endColumn":36},{"ruleId":"212","severity":1,"message":"213","line":63,"column":32,"nodeType":"214","messageId":"215","endLine":63,"endColumn":34},{"ruleId":"212","severity":1,"message":"213","line":81,"column":33,"nodeType":"214","messageId":"215","endLine":81,"endColumn":35},{"ruleId":"203","severity":1,"message":"236","line":31,"column":8,"nodeType":"205","endLine":31,"endColumn":10,"suggestions":"237"},"no-native-reassign",["238"],"no-negated-in-lhs",["239"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["240"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'cofirmDelete' and 'loadingEquipos'. Either include them or remove the dependency array.",["241"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'creatorId' is assigned a value but never used.","Identifier","unusedVar",["238"],["239"],"no-undef","'L' is not defined.","undef","'wialon' is not defined.","'useState' is defined but never used.","'useEffect' is defined but never used.","'MapContainer' is defined but never used.","'TileLayer' is defined but never used.","'MapConsumer' is defined but never used.","react-hooks/rules-of-hooks","React Hook \"useDispatch\" is called in function \"unidadesMapa\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","React Hook \"useSelector\" is called in function \"unidadesMapa\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","'putUnitsAction' is not defined.","'usuario' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'job'. Either include it or remove the dependency array.",["242"],"no-global-assign","no-unsafe-negation",{"desc":"243","fix":"244"},{"desc":"245","fix":"246"},{"desc":"247","fix":"248"},"Update the dependencies array to be: [dispatch, history]",{"range":"249","text":"250"},"Update the dependencies array to be: [cofirmDelete, grupos, loadingEquipos]",{"range":"251","text":"252"},"Update the dependencies array to be: [job]",{"range":"253","text":"254"},[508,510],"[dispatch, history]",[1566,1574],"[cofirmDelete, grupos, loadingEquipos]",[1279,1281],"[job]"]