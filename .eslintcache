[{"C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\index.js":"1","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\reportWebVitals.js":"2","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\store\\store.js":"3","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\App.js":"4","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\pages\\PrivateRoute.js":"5","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\pages\\Panel.js":"6","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\pages\\Equipos.js":"7","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\pages\\Login.js":"8","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\pages\\Reglas\\Reglas.js":"9","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\store\\reducers\\index.js":"10","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\pages\\Main.js":"11","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\services\\AuthService.js":"12","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\store\\actions\\CMDSActions.js":"13","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\store\\actions\\usuarioActions.js":"14","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\store\\actions\\unidadesActions.js":"15","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\store\\actions\\gruposActions.js":"16","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\pages\\MenuAcciones.js":"17","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\pages\\MapaOSM.js":"18","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\pages\\Reglas\\Jobs.js":"19","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\pages\\Reglas\\VerUnidades.js":"20","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\pages\\Reglas\\NuevaRegla.js":"21","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\wialon\\session.js":"22","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\pages\\Reglas\\EditarRegla.js":"23","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\store\\actions\\tareasActions.js":"24","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\config\\CMDS.js":"25","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\store\\reducers\\unidadesReducer.js":"26","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\store\\reducers\\gruposReducer.js":"27","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\store\\reducers\\CMDSReducer.js":"28","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\store\\reducers\\usuarioReducer.js":"29","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\store\\reducers\\tareasReducer.js":"30","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\config\\errores.js":"31","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\components\\DesktopContainer.js":"32","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\pages\\UnidadesMapa.js":"33","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\store\\types\\index.js":"34","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\pages\\Menu.js":"35"},{"size":711,"mtime":1611943000669,"results":"36","hashOfConfig":"37"},{"size":362,"mtime":1611877484000,"results":"38","hashOfConfig":"37"},{"size":414,"mtime":1611877484000,"results":"39","hashOfConfig":"37"},{"size":964,"mtime":1615098299064,"results":"40","hashOfConfig":"37"},{"size":2651,"mtime":1614729278995,"results":"41","hashOfConfig":"37"},{"size":1544,"mtime":1615098299085,"results":"42","hashOfConfig":"37"},{"size":13828,"mtime":1615183210283,"results":"43","hashOfConfig":"37"},{"size":1590,"mtime":1615098299082,"results":"44","hashOfConfig":"37"},{"size":18648,"mtime":1615101514379,"results":"45","hashOfConfig":"37"},{"size":456,"mtime":1614284480175,"results":"46","hashOfConfig":"37"},{"size":342,"mtime":1611877484000,"results":"47","hashOfConfig":"37"},{"size":849,"mtime":1614289902370,"results":"48","hashOfConfig":"37"},{"size":1129,"mtime":1614318889595,"results":"49","hashOfConfig":"37"},{"size":901,"mtime":1614318092505,"results":"50","hashOfConfig":"37"},{"size":1907,"mtime":1614318428625,"results":"51","hashOfConfig":"37"},{"size":5206,"mtime":1614318702295,"results":"52","hashOfConfig":"37"},{"size":8634,"mtime":1615101509740,"results":"53","hashOfConfig":"37"},{"size":747,"mtime":1615098299083,"results":"54","hashOfConfig":"37"},{"size":3062,"mtime":1615098299099,"results":"55","hashOfConfig":"37"},{"size":7912,"mtime":1615148050655,"results":"56","hashOfConfig":"37"},{"size":7021,"mtime":1615183259854,"results":"57","hashOfConfig":"37"},{"size":28849,"mtime":1615098299107,"results":"58","hashOfConfig":"37"},{"size":8804,"mtime":1615098299086,"results":"59","hashOfConfig":"37"},{"size":7144,"mtime":1615098299103,"results":"60","hashOfConfig":"37"},{"size":452,"mtime":1615098299066,"results":"61","hashOfConfig":"37"},{"size":1179,"mtime":1614318305160,"results":"62","hashOfConfig":"37"},{"size":1969,"mtime":1614318669473,"results":"63","hashOfConfig":"37"},{"size":826,"mtime":1614318853861,"results":"64","hashOfConfig":"37"},{"size":1043,"mtime":1615098299105,"results":"65","hashOfConfig":"37"},{"size":3246,"mtime":1615098299104,"results":"66","hashOfConfig":"37"},{"size":2075,"mtime":1614236595363,"results":"67","hashOfConfig":"37"},{"size":547,"mtime":1615098299066,"results":"68","hashOfConfig":"37"},{"size":4149,"mtime":1615098299102,"results":"69","hashOfConfig":"37"},{"size":2768,"mtime":1615098299106,"results":"70","hashOfConfig":"37"},{"size":4234,"mtime":1615098299083,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"lu8yv8",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"74"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"74"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"74"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"74"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"74"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"74"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"74"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"74"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"74"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"74"},"C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\index.js",[],["153","154"],"C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\reportWebVitals.js",[],"C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\store\\store.js",[],"C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\App.js",[],"C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\pages\\PrivateRoute.js",["155"],"import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport wialon from \"../wialon/session\";\r\n\r\nimport AuthService from \"../services/AuthService\";\r\nimport { saveTokenAction, saveUserAction } from \"../store/actions/usuarioActions\";\r\nimport { getGroupsAction } from \"../store/actions/gruposActions\";\r\nimport { getUnitsAction } from \"../store/actions/unidadesActions\";\r\nimport { getJobsAction } from \"../store/actions/tareasActions\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { logoutAction } from \"../store/actions/usuarioActions\";\r\nimport { getCMDSUnitsAction } from \"../store/actions/CMDSActions\";\r\nimport preloader from \"../img/preloader.svg\";\r\n\r\nconst PrivateRoute = ({ component: Component}) => {\r\n\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  let wialonObjeto = null;\r\n  const wialonLogin = (token) => {\r\n    wialonObjeto = new wialon(token);\r\n    let iniciar = new Promise((resolve, reject) => {\r\n      wialonObjeto.login( function(data) {\r\n        if (data.error) {\r\n          AuthService.logout();\r\n          dispatch( logoutAction() );\r\n          history.push('/login');\r\n            reject(\"¡Error\");\r\n        } else {\r\n            resolve(\"¡Éxito!\");\r\n        }\r\n      });\r\n\r\n    });\r\n    iniciar.then(() => {\r\n        wialonObjeto.showUnits();\r\n        dispatch(getJobsAction(wialonObjeto));\r\n        dispatch(saveUserAction(wialonObjeto));\r\n        dispatch(getGroupsAction(wialonObjeto));\r\n        dispatch(getUnitsAction(wialonObjeto));\r\n        dispatch(getCMDSUnitsAction(wialonObjeto));\r\n        setLoading(true);\r\n    });\r\n  }\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const loadingGrupos = useSelector(state => state.grupos.loading)\r\n  const loadingUnidades = useSelector(state => state.unidades.loading);\r\n  const loadingJobs = useSelector(state => state.tareas.loading);\r\n  const loadingCMDS = useSelector(state => state.CMDS.loading);\r\n\r\n  const [token] = useState( () => {\r\n    const token2 = AuthService.getToken();\r\n    console.log(\"entro\")\r\n    dispatch(saveTokenAction(token2));\r\n    wialonLogin(token2);\r\n    return token2;\r\n  });\r\n\r\n  return (\r\n    <Route render={\r\n        (props) => (\r\n          token !== null ? \r\n            loading && !loadingGrupos && !loadingUnidades && !loadingJobs && !loadingCMDS ?\r\n              <Component {...props} />\r\n              :\r\n              <img src={preloader} />\r\n          :\r\n            <Redirect to='/login' />\r\n    )} />\r\n\r\n  )\r\n}\r\nexport default PrivateRoute;\r\n//export default connect(mapStateToProps)(PrivateRoute)\r\n","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\pages\\Panel.js",["156"],"import React, { useState } from 'react';\r\nimport Main from './Main';\r\nimport { useSelector } from \"react-redux\";\r\nimport MenuAcciones from \"./MenuAcciones\";\r\nimport MapaOSM from \"./MapaOSM\";\r\nconst Panel = () => {\r\n    const CMDSUnidades = useSelector(state => state.CMDS.unidadesCMDS);\r\n    let unidades = useSelector(state => state.unidades.unidades);\r\n    unidades = unidades.map(unidad => {\r\n        const unidadCcmd = CMDSUnidades.find(unidadcmd => unidadcmd.id === unidad.id);\r\n        if (unidadCcmd !== undefined) {\r\n            return unidad;\r\n        }\r\n    });\r\n    unidades= unidades.filter( unidad => unidad !== undefined);\r\n    const [ marketPosition, setMarketPosition] = useState( unidades[0] === undefined ? { lat : 0 ,lng : 0 } : { lat : unidades[0].pos.y,lng : unidades[0].pos.x })\r\n    const grupos = useSelector(state => state.grupos.grupos);\r\n    const [unidadesModal ] = useState(unidades);\r\n    const positionCurrentMarket = id => {\r\n        const unidad = unidadesModal.filter( unidad => unidad.id === id);\r\n        const { x, y } = unidad[0].pos;\r\n        setMarketPosition({lat:y,lng:x});\r\n    }\r\n    return (\r\n        <Main>\r\n            <div className='mapaInicio'>\r\n                <MapaOSM\r\n                    marketPosition={marketPosition}\r\n                />\r\n            </div>\r\n            <MenuAcciones\r\n                unidades={unidades}\r\n                grupos={grupos}\r\n                positionCurrentMarket={ positionCurrentMarket }\r\n            />\r\n        </Main>\r\n    );\r\n}\r\nexport default Panel;\r\n","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\pages\\Equipos.js",["157","158","159","160"],"C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\pages\\Login.js",["161"],"import React, { useEffect } from 'react';\r\nimport AuthService from \"../services/AuthService\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { saveTokenAction } from \"../store/actions/usuarioActions\";\r\n\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Login = () => {\r\n\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const token = AuthService.getToken();\r\n    if (token !== null) {\r\n      dispatch(saveTokenAction(token));\r\n      history.push('/');  \r\n    }\r\n  },[])\r\n\r\n  window.onmessage = function (e) {\r\n    var msg = e.data;\r\n    if (typeof msg == \"string\" && msg.indexOf(\"access_hash=\") >= 0) {\r\n      var token = msg.replace(\"access_hash=\", \"\");\r\n      AuthService.saveToken(token);\r\n      dispatch( saveTokenAction(token) );\r\n      history.push('/');\r\n    }\r\n    //acces_type:256\r\n  };\r\n  return (\r\n    <div>\r\n        <video id=\"myVideo\" autoPlay=\"true\" muted loop>\r\n          <source src=\"http://www.intralix.com/videos/Compress-transcode.mp4\" type=\"video/mp4\" />\r\n        </video>\r\n        <iframe\r\n        className=\"content\"\r\n        id=\"iframeInicio\"\r\n        src=\"http://gps.intralix.com/login.html?client_id=myApp&access_type=0xFFFFFFFF&activation_time=0&duration=604800&flags=0xFFFFFFFF&response_type=hash&redirect_uri=http://gps.intralix.com/post_token.html&css_url=https://cocky-brahmagupta-e971ac.netlify.app/login.css\"\r\n        title=\"Inline Frame Example\"\r\n        width=\"500\"\r\n        height=\"500\"\r\n        style={{border: \"transparent\"}}\r\n        ></iframe>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\pages\\Reglas\\Reglas.js",["162","163","164","165","166","167","168","169","170","171","172"],"import React, { useState, useEffect } from 'react';\r\nimport { Accordion, Card, Button, Container, Row, Col } from 'react-bootstrap';\r\nimport { FaLock, FaSearch, FaArrowAltCircleDown, FaTasks } from 'react-icons/fa';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nimport NuevaRegla from \"./NuevaRegla\";\r\nimport Jobs from \"./Jobs\";\r\nimport VerUnidades from \"./VerUnidades\";\r\nimport EditarRegla from \"./EditarRegla\";\r\nimport Main from '../Main';\r\n\r\nimport { CMDSDefault } from \"../../config/CMDS\";\r\nimport { createJobAction, deleteJobAction, activateJobsAction, deactivateJobsAction } from \"../../store/actions/tareasActions\";\r\nimport preloader from \"../../img/preloader.svg\";\r\nconst Reglas = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const loading = useSelector(state => state.tareas.loadingData)\r\n    const usuario =  useSelector(state => state.usuario);\r\n    let unidades = useSelector(state => state.unidades.unidades);\r\n    const CMDSUnidades = useSelector(state => state.CMDS.unidadesCMDS)\r\n    let grupos = useSelector(state => state.grupos.grupos);\r\n    const gruposFiltrados = grupos => {\r\n        const newGR = grupos.map( grupo => {\r\n            let nuevasUnidades = grupo.d.u.map(Uni => {\r\n                const unidadCcmd = CMDSUnidades.find(unidad => Uni === unidad.id);\r\n                if (unidadCcmd !== undefined) {\r\n                    return Uni;\r\n                }\r\n            });\r\n            nuevasUnidades = nuevasUnidades.filter( uni => uni !== undefined);\r\n            //console.log(nuevasUnidades);\r\n            if (nuevasUnidades.length > 0) {\r\n                grupo.d.u = nuevasUnidades;\r\n                return grupo;\r\n            }\r\n        });\r\n        //console.log(newGR);\r\n        const gruposFiltrados = newGR.filter(grupo => grupo !== undefined)\r\n        return gruposFiltrados;\r\n    };\r\n    grupos = gruposFiltrados(grupos);\r\n    console.log(grupos);\r\n    const [gruposModal, setGruposModal] = useState(grupos);\r\n    const [nuevaRegla, setNuevaRegla] = useState(false);\r\n    const jobs = useSelector(state => state.tareas.tareas)\r\n    const [jobsModal, setJobsModal] = useState([]);\r\n    const [verUnidades, setVerunidades] = useState(false);\r\n    //const [unidadesJob, setUnidadesJob] = useState([]);\r\n    const [jobId,setJobId] = useState(0);\r\n    const [editarRegla, setEditarRegla] = useState(false);\r\n    const [comandoNuevaRegla, setComandoNuevaRegla] = useState(CMDSDefault[0].cmd_name);\r\n    const [unidadesCheck,setUnidadesCheck] = useState([]);\r\n    const wialonObject = useSelector(state => state.usuario.user);\r\n    useEffect(() => {\r\n        jobsModal.forEach(jobModal => {\r\n            const found = jobs.find(job => job.id === jobModal.id );\r\n            if (!found) {\r\n                setJobsModal(jobsModal.filter(jobModal2 => jobModal.id !== jobModal2.id));\r\n            }\r\n        });\r\n    }, [jobs]);\r\n    const addUnitNewJob = (tarea) => {\r\n        console.log(tarea);\r\n        tarea.unidades = unidadesCheck;\r\n        const CurrentCMD = CMDSDefault.find(cmd => cmd.cmd_name === tarea.cmd);\r\n        tarea.cmd = CurrentCMD;\r\n        //wialonObject.createNewJob(tarea);\r\n        dispatch(createJobAction(tarea,wialonObject));\r\n    }\r\n    const filtrarUnidadesComando = (e,comando) => {\r\n        const CurrentCMD = CMDSDefault.find(cmd => cmd.cmd_name === comando);\r\n        console.log(CurrentCMD)\r\n        grupos.forEach(grupo => {\r\n            grupo.d.u.forEach(unidad => {\r\n                var total = document.getElementsByName(unidad + \"SpanGrupoTareas\").length;\r\n                for(var i=0;i<total;i++){\r\n                    const domElement = document.getElementsByName(unidad + \"SpanGrupoTareas\")[i];\r\n                    domElement.style.color = \"#1269b3\";\r\n                }\r\n                var total = document.getElementsByName(unidad + \"checkbox\").length;\r\n                for(var i=0;i<total;i++){\r\n                    document.getElementsByName(unidad + \"checkbox\")[i].disabled = false;\r\n                }\r\n            });\r\n        });\r\n\r\n        let arrayUnidadesCBF = unidadesCheck;\r\n        grupos.forEach(grupo => {\r\n            grupo.d.u.forEach(unidad => {\r\n                const foundUnidadCMDS = CMDSUnidades.find(cmdsunidad => cmdsunidad.id === unidad);\r\n                if (foundUnidadCMDS) {\r\n                    console.log(foundUnidadCMDS);\r\n                    const found = foundUnidadCMDS.cmds.find(cmd => cmd.n === CurrentCMD.cmd_name && CurrentCMD.cmd_type === cmd.c);\r\n                    if (!found) {\r\n                        arrayUnidadesCBF = arrayUnidadesCBF.filter( unidadCB => unidadCB !== foundUnidadCMDS.id)\r\n                        var total = document.getElementsByName(unidad + \"SpanGrupoTareas\").length;\r\n                        for(var i=0;i<total;i++){\r\n                            const domElement = document.getElementsByName(unidad + \"SpanGrupoTareas\")[i];\r\n                            domElement.style.color = \"#dc3545\";\r\n                        }\r\n                        var total = document.getElementsByName(unidad + \"checkbox\").length;\r\n                        for(var i=0;i<total;i++){\r\n                            document.getElementsByName(unidad + \"checkbox\")[i].checked = false;\r\n                            document.getElementsByName(unidad + \"checkbox\")[i].disabled = true;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        });\r\n        setUnidadesCheck(arrayUnidadesCBF);\r\n        setComandoNuevaRegla(CurrentCMD);\r\n    }\r\n    const buscarUnidad = e => {\r\n        e.preventDefault();\r\n        const nombre = e.target.value.toUpperCase();\r\n        const arrayGrupos = [];\r\n        let tempGrupos = grupos;\r\n        tempGrupos.forEach(grupo => {\r\n            const arrayunidades = [];\r\n            grupo.d.u.forEach(unidadGrupo => {\r\n                unidades.forEach(unidad => {\r\n                    if (unidadGrupo === unidad.id) {\r\n                        if(unidad.nm.toUpperCase().search(nombre) !== -1){\r\n                            arrayunidades.push(unidadGrupo);\r\n                        }\r\n                    }\r\n                });\r\n            });\r\n            arrayGrupos.push({\r\n                f: grupo.f,\r\n                i: grupo.i,\r\n                d:{\r\n                cls: grupo.d.cls,\r\n                id:grupo.d.id,\r\n                mu: grupo.d.mu,\r\n                nm: grupo.d.nm,\r\n                u:arrayunidades\r\n                }\r\n            });\r\n        });\r\n        setGruposModal(arrayGrupos);\r\n    }\r\n    const addDevice = e => {\r\n        var total = document.getElementsByName(e.target.id).length;\r\n        for(var i=0;i<total;i++){\r\n            document.getElementsByName(e.target.id)[i].checked = e.target.checked;\r\n        }\r\n        const CCB = document.getElementById(e.target.id);\r\n        console.log(e.target.id);\r\n        console.log(e.target.id.replace(\"checkbox\", \"\"))\r\n        const NUC = parseInt(e.target.id.replace(\"checkbox\", \"\"));\r\n        if (CCB.checked) {\r\n            setUnidadesCheck([...unidadesCheck,NUC]);\r\n        }else{\r\n            setUnidadesCheck(unidadesCheck.filter( unidadCB => unidadCB !== NUC))\r\n        }\r\n        //agregar unidades\r\n    }\r\n    const addAllDevices = (e,grupo) => {\r\n        console.log(grupo);\r\n        let arrayUnidadesCB = [];\r\n        grupo.d.u.map(unidad => {\r\n            var total=document.getElementsByName(unidad + \"checkbox\").length;\r\n            for(var i=0;i<total;i++){\r\n                if(!document.getElementsByName(unidad + \"checkbox\")[i].disabled){\r\n                    document.getElementsByName(unidad + \"checkbox\")[i].checked = e.target.checked;\r\n                }\r\n            }\r\n            const VCB = unidadesCheck.filter(unidadCB => unidad === unidadCB );\r\n            if (VCB.length <= 0) {\r\n                if(!document.getElementsByName(unidad + \"checkbox\")[0].disabled){\r\n                    arrayUnidadesCB.push(unidad);\r\n                }\r\n            }\r\n        })\r\n        if (e.target.checked) {\r\n            arrayUnidadesCB = unidadesCheck.concat(arrayUnidadesCB);\r\n            setUnidadesCheck(arrayUnidadesCB);\r\n        }else{\r\n            arrayUnidadesCB = unidadesCheck;\r\n            grupo.d.u.forEach(unidad => {\r\n                arrayUnidadesCB = arrayUnidadesCB.filter( unidadCB => unidadCB !== unidad)\r\n            });\r\n            console.log(arrayUnidadesCB);\r\n            setUnidadesCheck(arrayUnidadesCB);\r\n        }\r\n    }\r\n    const confirmNuevaRegla = e => {\r\n        e.preventDefault();\r\n        setJobsModal([]);\r\n        filtrarUnidadesComando(null,CMDSDefault[0].cmd_name);\r\n        setNuevaRegla(true);\r\n    }\r\n    const showJobsUnit = (e,unidad) => {\r\n        e.preventDefault();\r\n        console.log(unidad)\r\n        let jobsModalTemp = [];\r\n        jobs.forEach(job => {\r\n            let flag = false;\r\n            job.unidades.forEach(unidadJob => {\r\n                if (unidadJob === unidad) {\r\n                    flag = true;\r\n                }\r\n            });\r\n            if (flag) {\r\n                jobsModalTemp.push(job);\r\n            }\r\n        });\r\n        console.log(jobsModalTemp);\r\n        setJobsModal(jobsModalTemp);\r\n    }\r\n    const showJobsGroup = (e,groupId) => {\r\n        e.preventDefault();\r\n        const currentGroup = grupos.filter(grupo => (grupo.d.id === groupId));\r\n        console.log(currentGroup);\r\n        let jobsModalTemp = [];\r\n        jobs.forEach(job => {\r\n            let flag = false;\r\n            job.unidades.forEach(unidadJob => {\r\n                currentGroup[0].d.u.forEach(unidadesG => {\r\n                    if (unidadJob === unidadesG) {\r\n                        flag = true;\r\n                    }\r\n                });\r\n            });\r\n            if (flag) {\r\n                jobsModalTemp.push(job);\r\n            }\r\n        });\r\n        console.log(jobsModalTemp);\r\n        setJobsModal(jobsModalTemp);\r\n    }\r\n    const unitsJobs = (e,jobId) => {\r\n        e.preventDefault();\r\n        console.log(jobId);\r\n        const unidadesJob = [];\r\n        jobsModal.forEach(job => {\r\n            if (job.id === jobId) {\r\n                job.unidades.forEach(jobU => {\r\n                    const unidad = unidades.filter(unidad => jobU === unidad.id);\r\n                    console.log(unidad)\r\n                    unidadesJob.push({id: unidad[0].id,nm: unidad[0].nm});\r\n                });\r\n            }\r\n        });\r\n        console.log(unidadesJob);\r\n        setJobId(jobId);\r\n        //setUnidadesJob(unidadesJob);\r\n        setVerunidades(true);\r\n    }\r\n    const editJob = (e,jobId) => {\r\n        e.preventDefault();\r\n        setJobId(jobId);\r\n        setEditarRegla(true);\r\n    }\r\n    const deleteJob = (e,jobId) => {\r\n        e.preventDefault();\r\n        console.log(jobId);\r\n        dispatch( deleteJobAction(jobId,wialonObject) );\r\n    }\r\n    const activateJob = (e,jobId) => {\r\n        e.preventDefault();\r\n        console.log(jobId);\r\n        dispatch( activateJobsAction(jobId, wialonObject) )\r\n    }\r\n    const deactivateJob = (e,jobId) => {\r\n        e.preventDefault();\r\n        console.log(jobId);\r\n        dispatch( deactivateJobsAction(jobId, wialonObject) )\r\n    }\r\n    return (\r\n        <Main>\r\n            <Container className=\"reglasBody\">\r\n                <Row>\r\n                    <Col xs lg=\"6\">\r\n                        {\r\n                            !verUnidades ?\r\n                                <Card>\r\n                                    <Card.Body style={{overflowY:\"auto\"}} >\r\n                                        <Card.Title style={{ margin:\"10px 0 10px 0\", textAlign:\"-webkit-right\"}}>\r\n                                            <button className=\"successButton\" onClick={ e => confirmNuevaRegla(e) }>Nueva regla</button>\r\n                                        </Card.Title>\r\n                                        <Card.Title style={{ margin:\"10px 0 10px 0\" }}>\r\n                                            <input onChange={ e => buscarUnidad(e) } id=\"inputGroup-sizing-sm\" className=\"inputBlack\" /><FaSearch />\r\n                                        </Card.Title>\r\n                                        <div className=\"divGruposReglas\">\r\n                                        {\r\n                                            gruposModal.length > 0 ?\r\n                                                gruposModal.map(grupo => (\r\n                                                    grupo.d.u.length > 0 ?\r\n                                                    (\r\n                                                        <Accordion key={grupo.d.id + \"G\"} defaultActiveKey=\"0\">\r\n                                                        <Card>\r\n                                                            <Card.Header style={{textAlign:\"left\"}}>\r\n                                                                <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\r\n                                                                    <FaArrowAltCircleDown />{grupo.d.nm}\r\n                                                                </Accordion.Toggle>\r\n                                                                <span>\r\n                                                                    <FaTasks onClick={e => showJobsGroup(e,grupo.d.id)}></FaTasks>\r\n                                                                    <input className=\"checboxGroup\" type=\"checkbox\" id={grupo.d.id + \"checkbox\"} onChange={ (e) => addAllDevices(e,grupo) } />\r\n                                                                </span>\r\n                                                            </Card.Header>\r\n                                                            <Accordion.Collapse eventKey=\"1\">\r\n                                                                {/**Todas las unidades del grupo */}\r\n                                                                <Card.Body style={{padding: \"10px 10px 10px 45px\", color: \"#000000\", textAlign:\"left\" }}>\r\n                                                                    {\r\n                                                                        grupo.d.u.map(unidad => (\r\n                                                                            <span key={unidad + \"MA\"} style={{cursor: \"pointer\"}} >\r\n                                                                            <span onClick={e => showJobsUnit(e,unidad)} name={unidad+\"SpanGrupoTareas\"} ><FaLock size={20} /> Unidad:\r\n                                                                                {\r\n                                                                                    (unidades.filter(unidad2 => unidad === unidad2.id))[0].nm\r\n                                                                                }\r\n                                                                            </span>\r\n                                                                            \r\n                                                                            <input className=\"checbokUnidad\" type=\"checkbox\" id={unidad + \"checkbox\"} name={unidad + \"checkbox\"} onChange={ e => addDevice(e) } />\r\n                                                                            {/*<FaTasks onClick={e => showJobsUnit(e,unidad)}></FaTasks>*/}\r\n                                                                            <br></br>\r\n                                                                            </span>\r\n                                                                        ))\r\n                                                                    }\r\n                                                                </Card.Body>\r\n                                                            </Accordion.Collapse>\r\n                                                        </Card>\r\n                                                        </Accordion>\r\n                                                    )\r\n                                                    :\r\n                                                        null\r\n                                                ))\r\n                                            :\r\n                                                null\r\n                                        }\r\n                                        </div>\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            :\r\n                                null\r\n                        }\r\n                    </Col>\r\n                    <Col xs lg=\"6\" >\r\n                    {\r\n                        nuevaRegla ?\r\n                            <NuevaRegla\r\n                                setNuevaRegla={setNuevaRegla}\r\n                                filtrarUnidadesComando={filtrarUnidadesComando}\r\n                                addUnitNewJob={addUnitNewJob}\r\n                            />\r\n                        :\r\n                            null\r\n                    }\r\n                    {\r\n                        jobsModal.length > 0 ?\r\n                            <Jobs\r\n                                unitsJobs={unitsJobs}\r\n                                jobsModal={jobsModal}\r\n                                editJob={editJob}\r\n                                deleteJob={deleteJob}\r\n                                activateJob={activateJob}\r\n                                deactivateJob={deactivateJob}\r\n                            />\r\n                        :\r\n                            null\r\n                    }\r\n                    {\r\n                        verUnidades ?\r\n                            <VerUnidades\r\n                                setVerunidades={setVerunidades}\r\n                                jobId={jobId}\r\n                            />\r\n                        :\r\n                            null\r\n                    }\r\n                    {\r\n                        editarRegla ?\r\n                        <EditarRegla\r\n                            jobId={jobId}\r\n                            setEditarRegla={setEditarRegla}\r\n                        />\r\n                        :\r\n                        null\r\n                    }\r\n                    {\r\n                        loading ?\r\n                        <Container className=\"popoverPanale\">\r\n                            <img src={preloader} />\r\n                        </Container>\r\n                        :null\r\n                    }\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </Main>\r\n    );\r\n}\r\nexport default Reglas;","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\store\\reducers\\index.js",[],"C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\pages\\Main.js",[],"C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\services\\AuthService.js",[],"C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\store\\actions\\CMDSActions.js",[],"C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\store\\actions\\usuarioActions.js",[],"C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\store\\actions\\unidadesActions.js",[],"C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\store\\actions\\gruposActions.js",[],"C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\pages\\MenuAcciones.js",["173","174","175"],"import React, { useState } from 'react';\r\nimport { ProSidebar, SidebarHeader, SidebarContent, SidebarFooter } from 'react-pro-sidebar';\r\nimport { FaLock, FaArrowAltCircleDown, FaSearch } from 'react-icons/fa';\r\nimport { Accordion, Card, Button, InputGroup, FormControl } from 'react-bootstrap';\r\nimport 'react-pro-sidebar/dist/css/styles.css';\r\nimport { useSelector } from \"react-redux\";\r\nimport Swal from 'sweetalert2';\r\n\r\nconst MenuAcciones = ({grupos, positionCurrentMarket}) => {\r\n  grupos = grupos.filter(grupo => grupo.d.u.length > 0);\r\n  const CMDSUnidades = useSelector(state => state.CMDS.unidadesCMDS);\r\n\r\n  const gruposFiltrados = grupos => {\r\n    const newGR = grupos.map( grupo => {\r\n        let nuevasUnidades = grupo.d.u.map(Uni => {\r\n            const unidadCcmd = CMDSUnidades.find(unidad => Uni === unidad.id);\r\n            if (unidadCcmd !== undefined) {\r\n                return Uni;\r\n            }\r\n        });\r\n        nuevasUnidades = nuevasUnidades.filter( uni => uni !== undefined);\r\n        //console.log(nuevasUnidades);\r\n        if (nuevasUnidades.length > 0) {\r\n            grupo.d.u = nuevasUnidades;\r\n            return grupo;\r\n        }\r\n    });\r\n    //console.log(newGR);\r\n    const gruposFiltrados = newGR.filter(grupo => grupo !== undefined)\r\n    return gruposFiltrados;\r\n  };\r\n  grupos = gruposFiltrados(grupos);\r\n  const Toast = Swal.mixin({\r\n    toast: true,\r\n    position: 'top-end',\r\n    showConfirmButton: false,\r\n    timer: 3000,\r\n    timerProgressBar: true,\r\n    didOpen: (toast) => {\r\n      toast.addEventListener('mouseenter', Swal.stopTimer)\r\n      toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n    }\r\n  });\r\n  let unidades = useSelector(state => state.unidades.unidades);\r\n  const [gruposModal, setGruposModal] = useState(grupos);\r\n  const wialonObject = useSelector(state => state.usuario.user);\r\n\r\n  const buscarUnidad = e => {\r\n    e.preventDefault();\r\n    const nombre = e.target.value.toUpperCase();\r\n    const arrayGrupos = [];\r\n    let tempGrupos = grupos;\r\n    tempGrupos.forEach(grupo => {\r\n      const arrayunidades = [];\r\n      grupo.d.u.forEach(unidadGrupo => {\r\n        unidades.forEach(unidad => {\r\n          if (unidadGrupo === unidad.id) {\r\n            if(unidad.nm.toUpperCase().search(nombre) !== -1){\r\n              arrayunidades.push(unidadGrupo);\r\n            }\r\n          }\r\n        });\r\n      });\r\n      arrayGrupos.push({\r\n        f: grupo.f,\r\n        i: grupo.i,\r\n        d:{\r\n          cls: grupo.d.cls,\r\n          id:grupo.d.id,\r\n          mu: grupo.d.mu,\r\n          nm: grupo.d.nm,\r\n          u:arrayunidades\r\n        }\r\n      });\r\n    });\r\n    setGruposModal(arrayGrupos);\r\n  }\r\n  const addDevice = e => {\r\n    var total=document.getElementsByName(e.target.id).length;\r\n    for(var i=0;i<total;i++){\r\n      document.getElementsByName(e.target.id)[i].checked = e.target.checked;\r\n    }\r\n    //agregar unidades\r\n  }\r\n  const addAllDevices = (e,grupo) => {\r\n    console.log(grupo);\r\n    grupo.d.u.map(unidad => {\r\n      var total=document.getElementsByName(unidad + \"checkbox\").length;\r\n      for(var i=0;i<total;i++){\r\n        document.getElementsByName(unidad + \"checkbox\")[i].checked = e.target.checked;\r\n      }\r\n    })\r\n  }\r\n\r\n  const cmdAlert = (e,comandoString) => {\r\n    e.preventDefault();\r\n    console.log(comandoString);\r\n    const arrayU = [];\r\n    const arrayUID = [];\r\n    let stringU = \"\";\r\n    unidades.forEach(unidad => {\r\n      const chek = document.getElementById(unidad.id+\"checkbox\").checked;\r\n      console.log(chek)\r\n      if (chek) {\r\n        arrayUID.push(unidad.id);\r\n        arrayU.push(unidad.nm);\r\n        stringU +=unidad.nm+\"<br/>\"\r\n      }\r\n    });\r\n    console.log(arrayU);\r\n    if (arrayU.length > 0) {\r\n      Swal.fire({\r\n        title: `Quieres enviar el comando ${comandoString}?`,\r\n        html: `${stringU}`,\r\n        showDenyButton: true,\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#cc3300',\r\n        focusConfirm: false,\r\n        confirmButtonText: `Enviar`,\r\n      }).then((result) => {\r\n        console.log(result)\r\n        if (result.value) {\r\n          //Swal.fire('Comando enviado!', '', 'success')\r\n          Swal.fire('Enviando comando', '', '')\r\n          cmd(arrayUID,comandoString);\r\n          Swal.showLoading();\r\n        } else if (result.dismiss) {\r\n          Swal.fire(`No se envio el comando ${comandoString}`, '', 'info')\r\n        }\r\n      })\r\n    }else{\r\n      Toast.fire({\r\n        type: 'warning',\r\n        title: 'Seleccione al menos una unidad'\r\n      })\r\n    }\r\n    \r\n  }\r\n  const cmd = (arrayUID,comandoString) => {\r\n    wialonObject.enviarComando(arrayUID,comandoString,function(data,arrayError) {\r\n      console.log(data);\r\n      if (data.error) {\r\n        Swal.fire('No se envio el comando', '', 'warning')\r\n      } else {\r\n        if (arrayError.length) {\r\n          let unidadesError = \"\";\r\n          arrayError.forEach(unidad => {\r\n            unidadesError +=unidad+\"<br/>\"\r\n          });\r\n          Swal.fire('No se envio el comando a las unidades', unidadesError, 'warning')\r\n        } else {\r\n          Swal.fire('Comando enviado', '', 'success')\r\n        }\r\n      }\r\n    });\r\n  }\r\n  return (\r\n      <>\r\n      <ProSidebar className='sidebaracciones' >\r\n        <SidebarHeader className=\"sidebarHeader\">\r\n          <div className='sidebarMNHeader' >\r\n            <button className=\"successButton\" onClick={ e => cmdAlert(e,\"Posición\") } >Abrir</button>{' '}\r\n            <button className=\"warnigButton\" onClick={ e => cmdAlert(e,\"Posición\") } >Restablecer</button>{' '}\r\n            <button className=\"dangerButton\" onClick={ e => cmdAlert(e,\"Posición\") } >Cerrar</button>{' '}\r\n            <br></br><br></br>\r\n            <InputGroup onChange={ buscarUnidad } size=\"sm\" className=\"mb-3\">\r\n              <InputGroup.Prepend>\r\n              <InputGroup.Text id=\"inputGroup-sizing-sm\" className=\"iconBuscar\" ><FaSearch /></InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl className=\"inputWhite\"  aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" />\r\n            </InputGroup>\r\n          </div>\r\n        </SidebarHeader>\r\n        <SidebarContent className=\"sidebarBody\">\r\n          {/**Acordeon que me acumula todo un grupo */}\r\n          {\r\n            gruposModal.map(grupo => (\r\n                grupo.d.u.length > 0 ?\r\n                  (\r\n                    <Accordion key={grupo.d.id + \"G\"} defaultActiveKey=\"0\">\r\n                      <Card>\r\n                          <Card.Header >\r\n                              <Accordion.Toggle as={Button} variant=\"\" eventKey=\"1\">\r\n                                  <FaArrowAltCircleDown />{grupo.d.nm}\r\n                              </Accordion.Toggle>\r\n                              <input className=\"checboxGroup\" type=\"checkbox\" id={grupo.d.id + \"checkbox\"} onChange={ (e) => addAllDevices(e,grupo) } />\r\n                          </Card.Header>\r\n                          <Accordion.Collapse eventKey=\"1\">\r\n                              {/**Todas las unidades del grupo */}\r\n                              <Card.Body style={{padding: \"10px 10px 10px 20px\", color: \"#000000\"}}>\r\n                                {\r\n                                  grupo.d.u.map(unidad => (\r\n                                    <span key={unidad + \"MA\"} style={{cursor: \"pointer\"}} onClick={ () => positionCurrentMarket(unidad)}>\r\n                                      <span><FaLock size={20} /> Unidad: {  (unidades.filter(unidad2 => unidad === unidad2.id))[0].nm  }</span>\r\n                                      <input className=\"checbokUnidad\" type=\"checkbox\" id={unidad + \"checkbox\"} name={unidad + \"checkbox\"} onChange={ e => addDevice(e) } />\r\n                                      <br></br>\r\n                                    </span>\r\n                                  ))\r\n                                }\r\n                              </Card.Body>\r\n                          </Accordion.Collapse>\r\n                      </Card>\r\n                    </Accordion>\r\n                  )\r\n                  :\r\n                    null\r\n            ))\r\n          }\r\n        </SidebarContent>\r\n        <SidebarFooter className=\"sidebarFooter\">\r\n          <div className=\"sidebar-btn-wrapper sidebarMNFooter\" >\r\n            <h2>Alertas</h2>\r\n            <p style={{color: \"red\"}}>Unidad: 25789  Sistema violado</p>\r\n            <p style={{color: \"green\"}}>Unidad: 25789  Chapa abierta</p>\r\n            <p style={{color: \"orange\"}}>unidad: 25789  Chapa cerrada</p>\r\n          </div>\r\n        </SidebarFooter>\r\n      </ProSidebar>\r\n      </>\r\n    );\r\n}\r\nexport default MenuAcciones;","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\pages\\MapaOSM.js",[],"C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\pages\\Reglas\\Jobs.js",[],"C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\pages\\Reglas\\VerUnidades.js",["176","177","178","179"],"import React, { useState } from 'react';\r\nimport { Card, Container, Row, Col } from 'react-bootstrap';\r\nimport { FaLock, FaSearch } from 'react-icons/fa';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateUnitsJobsAction } from \"../../store/actions/tareasActions\";\r\n\r\nconst VerUnidades = ({setVerunidades,jobId}) => {\r\n\r\n    let unidades = useSelector(state => state.unidades.unidades);\r\n    let CMDS = useSelector(staet => staet.CMDS.unidadesCMDS);\r\n    const jobs = useSelector(state => state.tareas.tareas)\r\n    const job = jobs.filter(job => job.id === parseInt(jobId));\r\n    const [unidadesJobs,setUnidadesJobs] = useState(job[0].unidades);\r\n    const dispatch = useDispatch();\r\n    const unidadesFiltradas = () => {\r\n        const currentCMDS = [];\r\n        CMDS.map(unidadcmds => {\r\n            const Ccmds = unidadcmds.cmds.filter(cmd => cmd.n === job[0].comando && cmd.c === job[0].comandoTipo);\r\n            if (Ccmds.length > 0) {\r\n                currentCMDS.push({id:unidadcmds.id,nm:unidadcmds.n});\r\n            }\r\n        })\r\n        console.log(currentCMDS);\r\n        return currentCMDS;\r\n        \r\n    };\r\n    const unidadesFinal = unidadesFiltradas();\r\n    const [unidadesModal,setUnidadesModal] = useState(unidadesFiltradas());\r\n    const wialonObject = useSelector(state => state.usuario.user);\r\n\r\n    const buscarUnidadModal = e => {\r\n        e.preventDefault();\r\n        const nombre = e.target.value.toUpperCase();\r\n        let arrayUnidades = [];\r\n        unidadesFinal.map(unidad => {\r\n            if(unidad.nm.toUpperCase().search(nombre) !== -1)\r\n            {\r\n                arrayUnidades.push({\r\n                    id: unidad.id,\r\n                    nm: unidad.nm\r\n                })\r\n            }\r\n        });\r\n        console.log(arrayUnidades);\r\n        setUnidadesModal(arrayUnidades);\r\n    }\r\n    const drag = e => {\r\n        e.dataTransfer.setData(\"text\", e.target.id);\r\n    }\r\n    const allowDrop = e => {\r\n        e.preventDefault();\r\n    }\r\n    const drop = e => {\r\n        e.preventDefault();\r\n        const data = e.dataTransfer.getData(\"text\");\r\n        console.log(unidadesJobs);\r\n        var repite = unidadesJobs.filter(unidad => parseInt(data) === unidad );\r\n        console.log(repite);\r\n        if (repite.length <= 0) {\r\n            setUnidadesJobs([...unidadesJobs,parseInt(data)]);\r\n        }\r\n        console.log(unidades);\r\n        unidades.map(unidadJob => {\r\n            const UC = document.getElementById(\"checboxUnidad\" + unidadJob.id);\r\n            if (UC !== null) {\r\n                console.log(UC);\r\n                if (UC.checked) {\r\n                    repite = unidadesJobs.filter(unidad => parseInt(unidadJob.id) === unidad );\r\n                    if (repite.length <= 0) {\r\n                        setUnidadesJobs([...unidadesJobs,parseInt(unidadJob.id)]);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n    const dropUnidades = e => {\r\n        e.preventDefault();\r\n        const data = e.dataTransfer.getData(\"text\");\r\n        let newGrupo = unidadesJobs.filter(grupo => grupo !== parseInt(data) )\r\n        unidadesJobs.map(unidad => {\r\n            const UC = document.getElementById(\"checboxUnidadJob\" + unidad).checked;\r\n            if (UC) {\r\n                newGrupo = newGrupo.filter(grupo => grupo !== parseInt(unidad) )\r\n            }\r\n        });\r\n        setUnidadesJobs(newGrupo);\r\n    }\r\n\r\n    const guardarUnidadesTareas = e => {\r\n        e.preventDefault();\r\n        console.log(unidadesJobs);\r\n        console.log(jobId);\r\n        dispatch( updateUnitsJobsAction( jobId,unidadesJobs.join(),wialonObject ) );\r\n    }\r\n    return (\r\n        <Container className=\"popoverPanale\">\r\n            <Card style={{ width: '50rem', marginTop:\"10px\" }}>\r\n                <Card.Body>\r\n                    {/** */}\r\n                    <Row>\r\n                        <Col onDrop={(e) => dropUnidades(e)} onDragOver={(e) => allowDrop(e)}>\r\n                            <Card className=\"cardAsignarUnidadestarea\">\r\n                                <Card.Header>Unidades disponibles</Card.Header>\r\n                                <Card.Body style={{ maxHeight:\"500px\", overflowY:\"auto\"}} >\r\n                                    <Card.Title><input onChange={ e => buscarUnidadModal(e) } id=\"inputGroup-sizing-sm\" className=\"inputBlack\" /><FaSearch /></Card.Title>\r\n                                    <div id=\"UnidadesDiv\">\r\n                                        {\r\n                                            unidadesModal.map(unidad => (\r\n                                                <div\r\n                                                    key={\"Reglas_U\" + unidad.id}\r\n                                                    id={unidad.id}\r\n                                                    draggable=\"true\"\r\n                                                    className=\"unidad\"\r\n                                                    onDragStart={e => drag(e)}\r\n                                                >\r\n                                                    <span><FaLock size={20} /> Unidad: {unidad.nm}</span>\r\n                                                    <input className=\"checbokUnidad white\" id={\"checboxUnidad\"+unidad.id} type=\"checkbox\"  />\r\n                                                    <br></br>\r\n                                                </div>\r\n                                            ))\r\n                                        }\r\n                                    </div>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                        <Col onDrop={(e) => drop(e)} onDragOver={(e) => allowDrop(e)}>\r\n                            <Card className=\"cardUnidadestarea\" >\r\n                                <Card.Header>Unidades tarea</Card.Header>\r\n                                <Card.Body style={{ maxHeight:\"500px\", overflowY:\"auto\"}} >\r\n                                    <div id=\"GrupoDiv\" >\r\n                                        {\r\n                                            unidadesJobs.map(unidad => (\r\n                                                <div\r\n                                                    key={\"Reglas_J\"+unidad}\r\n                                                    id={unidad}\r\n                                                    draggable=\"true\"\r\n                                                    className=\"unidad\"\r\n                                                    onDragStart={e => drag(e)}\r\n                                                >\r\n                                                    <span><FaLock size={20} /> Unidad: {\r\n                                                        unidades.filter(unidadG => (unidadG.id === unidad))[0].nm\r\n                                                    }</span>\r\n                                                    <input className=\"checbokUnidad white\" id={\"checboxUnidadJob\"+unidad} type=\"checkbox\"  />\r\n                                                    <br></br>\r\n                                                </div>\r\n                                            ))\r\n                                        }\r\n                                    </div>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                    {/** */}\r\n                </Card.Body>\r\n                <Card.Footer>\r\n                        <button className=\"successButton\" style={{float:\"right\"}} onClick={e => guardarUnidadesTareas(e)}>Guardar</button>\r\n                        <button className=\"warnigButton\" style={{float:\"right\"}} onClick={() => setVerunidades(false)}>Cancelar</button>\r\n                </Card.Footer>\r\n            </Card>\r\n        </Container>\r\n    );\r\n}\r\nexport default VerUnidades;","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\pages\\Reglas\\NuevaRegla.js",[],"C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\wialon\\session.js",["180","181"],"import W from 'wialonjs-api/dist/wialon-src'\r\nexport default class wialon {\r\n    session = null;\r\n    constructor(token){\r\n        this.token = token;\r\n        this.usuario = null;\r\n        this.unidades = [];\r\n        this.grupos = [];\r\n        this.sid = null;\r\n    }\r\n    login(callback){\r\n        let iniciar = new Promise((resolve, reject) => {\r\n            W.debug = true;\r\n            var self = this;\r\n            let session = self.session;\r\n            session = new W.Session('http://gps.intralix.com', {\r\n                eventsTimeout: 5\r\n            });\r\n            session\r\n                .on('lastMessageChanged', function() {\r\n                    //console.log('lastMessageChanged', arguments);\r\n                })\r\n                .on('positionChanged', function() {\r\n                    //console.log('positionChanged', arguments);\r\n                })\r\n                .on('itemChanged', function() {\r\n                    //console.log('itemChanged', arguments);\r\n                })\r\n                .on('itemDeleted', function() {\r\n                    //console.log('itemDeleted', arguments);\r\n                });\r\n            const StorageSID = localStorage.getItem('sid');\r\n            if (!StorageSID) {\r\n                session.execute('core/use_auth_hash', {authHash: this.token}, function(data) {\r\n                    var params = {\r\n                        params:{\"operateAs\":\"\",continueCurrentSession:true,checkService:\"auto.wialon_web.0\",restore:1,appName:\"myApp\"},\r\n                        sid:  session.getSid()\r\n                    }\r\n                    session.execute('core/duplicate', params, function(data) {\r\n                        //{\"operateAs\":\"\",\"continueCurrentSession\":true,\"checkService\":\"auto.wialon_web.0\",\"restore\":1,\"appName\":\"myApp\"}\r\n                        localStorage.setItem('sid', session.getSid());\r\n                        self.sid = session.getSid();\r\n                        self.usuario = data;\r\n                        /**inicio */\r\n                        var params = {spec:[{'type': 'type', 'data': 'avl_unit', 'flags': 0x401, 'mode': 0}]};\r\n                        // load items to current session\r\n                        session.execute('core/update_data_flags', params, function (data) {\r\n                            self.session = session;\r\n                            if (data.error) {\r\n                                reject(\"¡Error\");\r\n                                callback(data);\r\n                            } else {\r\n                                resolve(\"¡Éxito!\");\r\n                                callback(data);\r\n                            }\r\n                        });\r\n                    });\r\n                });\r\n            }else{\r\n                self.sid = StorageSID;\r\n                var params = {\r\n                    params:{\r\n                        \"operateAs\":\"\",\r\n                        \"continueCurrentSession\":true,\r\n                        \"checkService\":\"auto.wialon_web.0\",\r\n                        \"restore\":1,\r\n                        \"appName\":\"myApp\"\r\n                    },\r\n                    sid: self.sid\r\n                }\r\n                session.execute('core/duplicate', params, function(data) {\r\n                    localStorage.setItem('sid', session.getSid());\r\n                    self.sid = session.getSid();\r\n                    self.usuario = data;\r\n                    /**inicio */\r\n                    var params = {spec:[{'type': 'type', 'data': 'avl_unit', 'flags': 0x401, 'mode': 0}]};\r\n                    // load items to current session\r\n                    session.execute('core/update_data_flags', params, function (data) {\r\n                        self.session = session;\r\n                        if (data.error) {\r\n                            reject(\"¡Error\");\r\n                            callback(data);\r\n                        } else {\r\n                            resolve(\"¡Éxito!\");\r\n                            callback(data);\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n\r\n        });\r\n\r\n        iniciar.then(() => {\r\n            //console.log(this.session);\r\n        });\r\n    }\r\n    showUnits(){\r\n        this.unidades = this.session.getItems() === undefined ? [] : this.session.getItems();\r\n        this.unidades.filter(unidad => (unidad.lmsg !== null || unidad.lmsg !== undefined))\r\n    }\r\n    getCMDS(callback){\r\n        //obtener lista de comandos\r\n        const self = this;\r\n        new Promise(()=>{\r\n            var params = {\r\n                \"params\" : [],\r\n                \"sid\": self.sid\r\n            }\r\n            self.unidades.forEach(unidad => {\r\n                params.params.push(\r\n                {\r\n                    \"svc\":\"core/search_item\",\r\n                    \"params\":{\r\n                        \"id\":unidad.id,\r\n                        \"flags\":4294967295\r\n                    }\r\n                })\r\n            });\r\n            self.session.execute('core/batch&sid=' + self.sid, params, function(data) {\r\n                console.log(\"cmds\");\r\n                console.log(data);\r\n                if (data.error) {\r\n                    callback(data);\r\n                } else {\r\n                    const unidadesCMDS = [];\r\n                    data.forEach(unidad => {\r\n                        if (unidad.item.cmds !== undefined) {\r\n                            const fecha = ( unidad.item.pos !== null ? obtenerFecha(unidad.item.pos.t) : \"00/00/0000\");\r\n                            unidadesCMDS.push({\r\n                                fecha:fecha,\r\n                                pos: unidad.item.pos,\r\n                                id:unidad.item.id,\r\n                                n:unidad.item.nm,\r\n                                cmds:unidad.item.cmds\r\n                            });\r\n                            /*\r\n                            unidad.item.cmds.forEach(comando => {\r\n                                if (comando.n === \"Posición\") {unidadesCMDS\r\n                                    console.log(unidad);\r\n                                    //console.log(unidad.item.nm);\r\n                                    console.log(comando);\r\n                                }\r\n                            });\r\n                            */\r\n                        }\r\n                    });\r\n                    callback(unidadesCMDS);\r\n                }\r\n            });\r\n        })\r\n    }\r\n    //\r\n    getJobs(callback){\r\n        const self = this;\r\n        new Promise(() => {\r\n            var params = {\r\n                params:{\r\n                    \"itemId\":105\r\n                }\r\n            };\r\n            self.session.execute('resource/get_job_data', params, function (data) {\r\n                if (data.error) {\r\n                    callback(data);\r\n                } else {\r\n                    const reglasArray = [];\r\n                    data = data.filter( job => job.act.t === \"exec_unit_cmd\" )\r\n                    data.forEach(tarea => {\r\n                        const id = tarea.id;\r\n                        const dias = obtenerDias(tarea.sch.w);\r\n                        const nombre = tarea.n;\r\n                        const comando = tarea.act.p.cmd_name;\r\n                        const comandoTipo = tarea.act.p.cmd_type;\r\n                        const unidades = obtenerUnidades(tarea.act.p.units);\r\n                        const hora = obtenerHora(tarea.r);\r\n                        const fecha = obtenerFecha(tarea.at);\r\n                        const estado = tarea.st.e;\r\n                        reglasArray.push({dias,nombre,comando,hora,unidades,estado,id,fecha,comandoTipo})\r\n                    });\r\n                    callback(reglasArray);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    editUnitsJob(id,unidades,callback){\r\n        const self = this;\r\n        new Promise(()=>{\r\n            //obtener la tarea\r\n            var params = {\r\n                params:{\r\n                    \"itemId\":105,\r\n                    \"col\":[id]\r\n                }\r\n            };\r\n            self.session.execute('resource/get_job_data', params, function (data) {\r\n                console.log(data);\r\n                if (data.error) {\r\n                    callback(data);\r\n                } else {\r\n                    //editar tarea\r\n                    data=data[0];\r\n                    const creatorId = self.usuario.user.id\r\n                    data.act.p.units = unidades;\r\n                    Object.assign(data, {itemId: 105,callMode:\"update\"});\r\n                    var params = {\r\n                        params:data\r\n                    };\r\n                    self.session.execute('resource/update_job', params, function (data) {\r\n                        console.log(data);\r\n                        if (data.error) {\r\n                            callback(data);\r\n                        } else {\r\n                            var params = {\r\n                                params:{\r\n                                    \"itemId\":105,\r\n                                    \"col\":[7,8]\r\n                                }\r\n                            };\r\n                            self.session.execute('resource/get_job_data', params, function (data) {\r\n                                if (data.error) {\r\n                                    callback(data);\r\n                                } else {\r\n                                    const reglasArray = [];\r\n                                    data.forEach(tarea => {\r\n                                        const id = tarea.id;\r\n                                        const dias = obtenerDias(tarea.sch.w);\r\n                                        const nombre = tarea.n;\r\n                                        const comando = tarea.act.p.cmd_name;\r\n                                        const comandoTipo = tarea.act.p.cmd_type;\r\n                                        const unidades = obtenerUnidades(tarea.act.p.units);\r\n                                        const hora = obtenerHora(tarea.r);\r\n                                        const fecha = obtenerFecha(tarea.at);\r\n                                        const estado = tarea.st.e;\r\n                                        reglasArray.push({dias,nombre,comando,hora,unidades,estado,id,fecha,comandoTipo})\r\n                                    });\r\n                                    callback(reglasArray);\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        });\r\n    };\r\n    editJob(id,nuevaTarea,callback){\r\n        const self = this;\r\n        new Promise(()=>{\r\n            //obtener la tarea\r\n            var params = {\r\n                params:{\r\n                    \"itemId\":105,\r\n                    \"col\":[id]\r\n                }\r\n            };\r\n            self.session.execute('resource/get_job_data', params, function (data) {\r\n                console.log(data);\r\n                if (data.error) {\r\n                    callback(data);\r\n                } else {\r\n                    //editar tarea\r\n                    data=data[0];\r\n                    const creatorId = self.usuario.user.id;\r\n                    //data.act.p.units = unidades;\r\n                    console.log(nuevaTarea);\r\n                    Object.assign(data, {itemId: 105,callMode:\"update\"});\r\n                    data.n = nuevaTarea.nombreTarea;\r\n                    data.r = \"1 \" + nuevaTarea.Hora;\r\n                    if (nuevaTarea.fecha !== null) data.at = nuevaTarea.fecha;\r\n                    if (nuevaTarea.arrayNuevosDias !== null) {\r\n                        const dias = formatoDiasTarea(nuevaTarea.arrayNuevosDias);\r\n                        data.sch.w = dias;\r\n                    }\r\n                    var params = {\r\n                        params:data\r\n                    };\r\n                    self.session.execute('resource/update_job', params, function (data) {\r\n                        console.log(data);\r\n                        if (data.error) {\r\n                            callback(data);\r\n                        } else {\r\n                            var params = {\r\n                                params:{\r\n                                    \"itemId\":105\r\n                                }\r\n                            };\r\n                            self.session.execute('resource/get_job_data', params, function (data) {\r\n                                if (data.error) {\r\n                                    callback(data);\r\n                                } else {\r\n                                    data = data.filter( job => job.act.t === \"exec_unit_cmd\" )\r\n                                    const reglasArray = [];\r\n                                    data.forEach(tarea => {\r\n                                        const id = tarea.id;\r\n                                        const dias = obtenerDias(tarea.sch.w);\r\n                                        const nombre = tarea.n;\r\n                                        const comando = tarea.act.p.cmd_name;\r\n                                        const comandoTipo = tarea.act.p.cmd_type;\r\n                                        const unidades = obtenerUnidades(tarea.act.p.units);\r\n                                        const hora = obtenerHora(tarea.r);\r\n                                        const fecha = obtenerFecha(tarea.at);\r\n                                        const estado = tarea.st.e;\r\n                                        reglasArray.push({dias,nombre,comando,hora,unidades,estado,id,fecha,comandoTipo})\r\n                                    });\r\n                                    callback(reglasArray);\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        });\r\n    }\r\n    createNewJob(nuevaTarea,callback){\r\n        const self = this;\r\n        new Promise(()=>{\r\n            var data = armarTarea(nuevaTarea);\r\n            console.log(data)\r\n            var params = {\r\n                params:data\r\n            };\r\n            self.session.execute('resource/update_job', params, function (data) {\r\n                console.log(data);\r\n                if (data.error) {\r\n                    callback(data);\r\n                } else {\r\n                    var params = {\r\n                        params:{\r\n                            \"itemId\":105\r\n                        }\r\n                    };\r\n                    self.session.execute('resource/get_job_data', params, function (data) {\r\n                        if (data.error) {\r\n                            callback(data);\r\n                        } else {\r\n                            data = data.filter( job => job.act.t === \"exec_unit_cmd\" )\r\n                            const reglasArray = [];\r\n                            data.forEach(tarea => {\r\n                                const id = tarea.id;\r\n                                const dias = obtenerDias(tarea.sch.w);\r\n                                const nombre = tarea.n;\r\n                                const comando = tarea.act.p.cmd_name;\r\n                                const comandoTipo = tarea.act.p.cmd_type;\r\n                                const unidades = obtenerUnidades(tarea.act.p.units);\r\n                                const hora = obtenerHora(tarea.r);\r\n                                const fecha = obtenerFecha(tarea.at);\r\n                                const estado = tarea.st.e;\r\n                                reglasArray.push({dias,nombre,comando,hora,unidades,estado,id,fecha,comandoTipo});\r\n                            });\r\n                            callback(reglasArray);\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        });\r\n    }\r\n    deleteJob(idJob,callback){\r\n        const self = this;\r\n        new Promise(()=>{\r\n            var params = {\r\n                params:{\r\n                    \"id\": idJob,\r\n                    \"itemId\": 105,\r\n                    \"callMode\": \"delete\"\r\n                }\r\n            };\r\n            self.session.execute('resource/update_job', params, function (data) {\r\n                console.log(data);\r\n                if (data.error) {\r\n                    callback(data);\r\n                } else {\r\n                    callback(data);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    deactivateJob(idJob,callback){\r\n        const self = this;\r\n        new Promise(()=>{\r\n            var params = {\r\n                params:{\r\n                    \"id\":idJob,\r\n                    \"e\":0,\r\n                    \"itemId\":105,\r\n                    \"callMode\":\"enable\"\r\n                }\r\n            };\r\n            self.session.execute('resource/update_job', params, function (data) {\r\n                console.log(data);\r\n                if (data.error) {\r\n                    callback(data);\r\n                } else {\r\n                    callback(data);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    activateJob(idJob,callback){\r\n        const self = this;\r\n        new Promise(()=>{\r\n            var params = {\r\n                params:{\r\n                    \"id\":idJob,\r\n                    \"e\":1,\r\n                    \"itemId\":105,\r\n                    \"callMode\":\"enable\"\r\n                }\r\n            };\r\n            self.session.execute('resource/update_job', params, function (data) {\r\n                console.log(data);\r\n                if (data.error) {\r\n                    callback(data);\r\n                } else {\r\n                    callback(data);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    //\r\n    showGroups(callback){\r\n        const self = this;\r\n        new Promise(() => {\r\n            var params = {spec:[{'type': 'type', 'data': 'avl_unit_group', 'flags': 0x411, 'mode': 1}]};\r\n            this.session.execute('core/update_data_flags', params, function (data) {\r\n                self.grupos = data;\r\n                if (data.error) {\r\n                    callback(data);\r\n                } else {\r\n                    callback(data);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    addUnitsGroup(units,IdGroup,callback){\r\n        new Promise(() => {\r\n            const self = this;\r\n            var req = new W.Request('http://gps.intralix.com');\r\n            var params = {\r\n                \"params\":{\r\n                    \"itemId\": IdGroup, \r\n                    \"units\": units\r\n                },\r\n                \"sid\":self.sid\r\n            };\r\n            req.api('unit_group/update_units&sid=' + self.sid, params, function(data) {\r\n                if (data.error) {\r\n                    callback(data);\r\n                } else {\r\n                    let groups = self.session.getItems(\"avl_unit_group\");\r\n                    groups = groups.filter(grupo => (grupo.nm === \"Admin\" || grupo.nm === \"Grupo Desarrollo\") );\r\n                    callback(groups);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    createGroup(units,name,callback){\r\n        new Promise(() => {\r\n            const self = this;\r\n            console.log(self.usuario.user.id);\r\n            const creatorId = self.usuario.user.id\r\n            var req = new W.Request('http://gps.intralix.com');\r\n            var params = {\r\n                \"params\":{\r\n                    \"creatorId\": creatorId, \r\n                    \"name\": name,\r\n                    \"dataFlags\": 1\r\n                },\r\n                \"sid\":self.sid\r\n            };\r\n            req.api('core/create_unit_group&sid=' + self.sid, params, function(data) {\r\n                if (data.error) {\r\n                    callback(data);\r\n                } else {\r\n                    callback(data);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    addUnitsNewGroup(units,IdGroup,callback){\r\n        new Promise(() => {\r\n            const self = this;\r\n            var req = new W.Request('http://gps.intralix.com');\r\n            var params = {\r\n                \"params\":{\r\n                    \"itemId\": IdGroup, \r\n                    \"units\": units\r\n                },\r\n                \"sid\":self.sid\r\n            };\r\n            req.api('unit_group/update_units&sid=' + self.sid, params, function(data) {\r\n                if (data.error) {\r\n                    callback(data);\r\n                } else {\r\n                    callback(data);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    deleteGroup(IdGroup,callback){\r\n        new Promise(() => {\r\n            const self = this;\r\n            var req = new W.Request('http://gps.intralix.com');\r\n            var params = {\r\n                \"params\":{\r\n                    'itemId': IdGroup\r\n                },\r\n                \"sid\":self.sid\r\n            };\r\n            req.api('item/delete_item&sid=' + self.sid, params, function(data) {\r\n                if (data.error) {\r\n                    callback(data);\r\n                } else {\r\n                    callback(data);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    enviarComando(unidades,comandoString,callback){\r\n        const self = this;\r\n        new Promise(() => {\r\n            var params = {\r\n                \"params\" : [],\r\n                \"sid\": self.sid\r\n            }\r\n            unidades.forEach(unidad => {\r\n                params.params.push(\r\n                    {\r\n                        \"svc\":\"unit/exec_cmd\",\r\n                        \"params\":{\r\n                            \"itemId\":unidad,\r\n                            \"commandName\":comandoString,\r\n                            \"linkType\" : \"\",\r\n                            \"param\" : \"\",\r\n                            \"timeout\":0,\r\n                            \"flags\":1\r\n                        }\r\n                    })\r\n            });\r\n            self.session.execute('core/batch&sid=' + self.sid, params, function(data) {\r\n                const arrayError = [];\r\n                for (let i = 0; i < data.length; i++) {\r\n                    const respuesta = data[i];\r\n                    const unidad = unidades[i];\r\n                    if(respuesta.error){\r\n                        arrayError.push(unidad);\r\n                    }\r\n                }\r\n                if (data.error) {\r\n                    callback(data,arrayError);\r\n                } else {\r\n                    callback(data,arrayError);\r\n                }\r\n            });\r\n        });\r\n    }\r\n}\r\nconst armarTarea = (tarea) => {\r\n    let dias = 0;\r\n    if (tarea.arrayNuevosDias.length > 0) {\r\n        dias = formatoDiasTarea(tarea.arrayNuevosDias);\r\n    }\r\n    var local = new Date();\r\n    var utc = Date.UTC(local.getFullYear(), local.getMonth(), local.getDate(), local.getHours(), local.getMinutes(), local.getSeconds(), local.getMilliseconds());\r\n    var tz = (utc - local.getTime());\r\n    //console.log(utc - local.getTime());\r\n    const tareaNueva = {\r\n        \"n\": tarea.nombreTarea,\r\n        \"d\": tarea.nombreTarea + \" creada desde portal de chapas\",\r\n        \"r\": \"1 \"+tarea.Hora,\r\n        \"at\": tarea.fecha,\r\n        \"tz\": tz,       //verificar\r\n        \"l\": \"es\",\r\n        \"e\": 1,\r\n        \"m\": 0,\r\n        \"sch\": {\r\n            \"f1\": 0,\r\n            \"f2\": 0,\r\n            \"t1\": 0,\r\n            \"t2\": 0,\r\n            \"m\": 0,\r\n            \"y\": 0,\r\n            \"w\": dias          //dias a la semana que se repite\r\n        },\r\n        \"act\": {\r\n            \"t\": \"exec_unit_cmd\",\r\n            \"p\": {\r\n                \"units\": tarea.unidades.join(),\r\n                \"cmd_name\": tarea.cmd.cmd_name,\r\n                \"cmd_type\": tarea.cmd.cmd_type,\r\n                \"cmd_param\": tarea.cmd.cmd_param,\r\n                \"link_type\": \"\",\r\n                \"timeout\": 60\r\n            }\r\n        },\r\n        \"id\": 0,\r\n        \"itemId\": 105,\r\n        \"callMode\": \"create\"\r\n    };\r\n    return tareaNueva;\r\n}\r\nconst obtenerFecha = (fecha) => {\r\n    var a = new Date(fecha * 1000);\r\n    var months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\r\n    var year = a.getFullYear();\r\n    var month = months[a.getMonth()];\r\n    var date = a.getDate();\r\n    var time = date + ' ' + month + ' ' + year;\r\n    return time;\r\n}\r\n\r\nconst obtenerUnidades = (unidades) => {\r\n    var unidadesArr = unidades.split(',');\r\n    const unidadesR = [];\r\n    unidadesArr.forEach(element => {\r\n        unidadesR.push(parseInt(element))\r\n    });\r\n    return unidadesR;\r\n}\r\nconst obtenerHora = (hora) => {\r\n    var date = hora.substr(2, hora.length);\r\n    return date;\r\n}\r\nconst obtenerDias = (diasJob) => {\r\n    const arrayDias = [];\r\n    arrayDiasJobs.forEach(dia => {\r\n        const diaTemp = diasJob - dia[1];\r\n        if (diaTemp >= 0) {\r\n            arrayDias.push(dia[0]);\r\n            diasJob = diaTemp;\r\n        }\r\n    });\r\n    return arrayDias;\r\n}\r\nconst formatoDiasTarea = (diasJob) => {\r\n    let contadorDias = 0;\r\n    diasJob.forEach(dia => {\r\n        arrayDiasJobs.forEach(DJ => {\r\n            if (dia === DJ[0]) {\r\n                contadorDias += DJ[1];\r\n            }\r\n        });\r\n    });\r\n    return contadorDias;\r\n}\r\nconst arrayDiasJobs = [\r\n    [\"Domingo\",64],\r\n    [\"Sabado\",35],\r\n    [\"Viernes\",16],\r\n    [\"Jueves\",8],\r\n    [\"Miercoles\",4],\r\n    [\"Martes\",2],\r\n    [\"Lunes\",1]\r\n]\r\n\r\n\r\n//Invoke-WebRequest -Uri \"http://gps.intralix.com/wialon/ajax.html?svc=resource/update_job&sid=1f7b5888b31f65221c3ff2a37d9a6243\" `\r\n//-Method \"POST\" `\r\n//-Headers @{\r\n//\"User-Agent\"=\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 Safari/537.36\"\r\n//  \"Accept\"=\"*/*\"\r\n//  \"Origin\"=\"http://gps.intralix.com\"\r\n//  \"Referer\"=\"http://gps.intralix.com/wialon/post.html\"\r\n//  \"Accept-Encoding\"=\"gzip, deflate\"\r\n//  \"Accept-Language\"=\"es-419,es;q=0.9,en;q=0.8\"\r\n//  \"Cookie\"=\"_gcl_au=1.1.1601771906.1607701582; _ym_d=1611953260; _ym_uid=1611953260214380465; lang=es; _ga=GA1.1.1504113298.1607701583; _ga_KGT7H4QD6P=GS1.1.1613601284.4.0.1613601291.53; wwp=; _ym_isad=2; sessions=888eeae6ad0ca653329fe58520245d5b%2C44c7832d07bce0ab9e7f57129fc45544%2C1f7b5888b31f65221c3ff2a37d9a6243\"\r\n//} `\r\n//-ContentType \"application/x-www-form-urlencoded\" `\r\n//-Body \"params=%7B%22n%22%3A%22Posici%C3%B3n%20Desarrollo%22%2C%22d%22%3A%22tarea%20prueba%20desarrollo%22%2C%22r%22%3A%222%2018000%22%2C%22at%22%3A1613714400%2C%22tz%22%3A-100160608%2C%22l%22%3A%22es%22%2C%22e%22%3A1%2C%22m%22%3A0%2C%22sch%22%3A%7B%22f1%22%3A0%2C%22f2%22%3A0%2C%22t1%22%3A0%2C%22t2%22%3A0%2C%22m%22%3A0%2C%22y%22%3A0%2C%22w%22%3A0%7D%2C%22act%22%3A%7B%22t%22%3A%22exec_unit_cmd%22%2C%22p%22%3A%7B%22units%22%3A%221734%22%2C%22cmd_name%22%3A%22Posici%C3%B3n%22%2C%22cmd_type%22%3A%22custom_msg%22%2C%22cmd_param%22%3A%22AT%2BGTRTO%3Dgv55w%2C1%2C%2C0%2C%2C%2C%2CFFFF%24%22%2C%22link_type%22%3A%22%22%2C%22timeout%22%3A60%7D%7D%2C%22id%22%3A0%2C%22itemId%22%3A105%2C%22callMode%22%3A%22create%22%7D&sid=1f7b5888b31f65221c3ff2a37d9a6243\"\r\n\r\n/*\r\nrequest\r\n{\r\n    \"n\": \"Posición Desarrollo\",\r\n    \"d\": \"tarea prueba desarrollo\",\r\n    \"r\": \"2 18000\",\r\n    \"at\": 1613714400,\r\n    \"tz\": -100160608,\r\n    \"l\": \"es\",\r\n    \"e\": 1,\r\n    \"m\": 0,\r\n    \"sch\": {\r\n      \"f1\": 0,\r\n      \"f2\": 0,\r\n      \"t1\": 0,\r\n      \"t2\": 0,\r\n      \"m\": 0,\r\n      \"y\": 0,\r\n      \"w\": 0\r\n    },\r\n    \"act\": {\r\n      \"t\": \"exec_unit_cmd\",\r\n      \"p\": {\r\n        \"units\": \"1734\",\r\n        \"cmd_name\": \"Posición\",\r\n        \"cmd_type\": \"custom_msg\",\r\n        \"cmd_param\": \"AT+GTRTO=gv55w,1,,0,,,,FFFF$\",\r\n        \"link_type\": \"\",\r\n        \"timeout\": 60\r\n      }\r\n    },\r\n    \"id\": 0,\r\n    \"itemId\": 105,\r\n    \"callMode\": \"create\"\r\n  }\r\n*/  \r\n/**\r\n * response\r\n[\r\n  7,\r\n  {\r\n    \"id\": 7,\r\n    \"n\": \"Posición Desarrollo\",\r\n    \"d\": \"tarea prueba desarrollo\",\r\n    \"m\": 0,\r\n    \"st\": {\r\n      \"e\": 1,\r\n      \"c\": 0,\r\n      \"l\": 0\r\n    },\r\n    \"act\": \"exec_unit_cmd\",\r\n    \"ct\": 1613757698,\r\n    \"mt\": 1613757698\r\n  }\r\n]\r\n */\r\n\r\n /**varios dias (lunes, miercoles, jueves)\r\n  * request\r\n{\r\n  \"n\": \"Posición desarrollo 2\",\r\n  \"d\": \"Tarea desarrollo 2 unidades\",\r\n  \"r\": \"1 12:00\",\r\n  \"at\": 1613714400,\r\n  \"tz\": -100160608,\r\n  \"l\": \"es\",\r\n  \"e\": 1,\r\n  \"m\": 0,\r\n  \"sch\": {\r\n    \"f1\": 0,\r\n    \"f2\": 0,\r\n    \"t1\": 0,\r\n    \"t2\": 0,\r\n    \"m\": 0,\r\n    \"y\": 0,\r\n    \"w\": 13\r\n  },\r\n  \"act\": {\r\n    \"t\": \"exec_unit_cmd\",\r\n    \"p\": {\r\n      \"units\": \"1028,1447\",\r\n      \"cmd_name\": \"Posición\",\r\n      \"cmd_type\": \"query_pos\",\r\n      \"cmd_param\": \"AT+GTRTO=gv55w,1,,0,,,,FFFF$\",\r\n      \"link_type\": \"\",\r\n      \"timeout\": 60\r\n    }\r\n  },\r\n  \"id\": 0,\r\n  \"itemId\": 105,\r\n  \"callMode\": \"create\"\r\n}\r\n  */\r\n /**\r\n  * response\r\n[\r\n  8,\r\n  {\r\n    \"id\": 8,\r\n    \"n\": \"Posición desarrollo 2\",\r\n    \"d\": \"Tarea desarrollo 2 unidades\",\r\n    \"m\": 0,\r\n    \"st\": {\r\n      \"e\": 1,\r\n      \"c\": 0,\r\n      \"l\": 0\r\n    },\r\n    \"act\": \"exec_unit_cmd\",\r\n    \"ct\": 1613774353,\r\n    \"mt\": 1613774353\r\n  }\r\n]\r\n  */","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\pages\\Reglas\\EditarRegla.js",["182"],"import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Card, Container, Row, Col, Table, Form } from 'react-bootstrap';\r\nimport DatePicker from \"react-datepicker\";\r\nimport { updateJobAction } from \"../../store/actions/tareasActions\";\r\n\r\nconst EditarRegla = ({jobId,setEditarRegla}) => {\r\n    const dispatch = useDispatch();\r\n    const jobs = useSelector(state => state.tareas.tareas);\r\n    const job = jobs.filter(job => job.id === parseInt(jobId))[0];\r\n    const [nombreTarea, setNombreRegla] = useState(\"\")\r\n    const [startDateHora, setStartDateHora] = useState(new Date());\r\n    const [startDate, setStartDate] = useState(new Date());\r\n    const [toggleDate, setToggleDate] = useState(true);\r\n    const wialonObject = useSelector(state => state.usuario.user);\r\n    useEffect(() => {\r\n        if (job !== undefined && job !== null) {\r\n            setNombreRegla(job.nombre);\r\n            setStartDateHora(new Date(\"0 \"+job.hora));\r\n\r\n            document.getElementById(\"SelectComandoEditarRegla\").value  = \"Cerrar\";\r\n            if (job.dias.length > 0) {\r\n                setToggleDate(true);\r\n                job.dias.forEach(dia => {\r\n                    document.getElementById(\"EditarReglaCheckbox\"+dia).checked = true;\r\n                });\r\n            }else{\r\n                setToggleDate(false);\r\n                setStartDate(new Date(job.fecha));\r\n            }\r\n        }\r\n    }, []);\r\n    const updateJob = (e) => {\r\n        e.preventDefault();\r\n        const Hora = addZero(startDateHora.getHours())+\":\"+addZero(startDateHora.getMinutes())\r\n        const nuevaTarea = {\r\n            jobId,\r\n            nombreTarea,\r\n            Hora,\r\n            arrayNuevosDias:null,\r\n            fecha:null\r\n        }\r\n        console.log(jobId);\r\n        console.log(nombreTarea);\r\n        console.log(addZero(startDateHora.getHours())+\":\"+addZero(startDateHora.getMinutes()));\r\n        console.log(toggleDate);\r\n        if (toggleDate) {\r\n            //dias\r\n            const arrayNuevosDias = [];\r\n            if(document.getElementById(\"EditarReglaCheckboxLunes\").checked)  arrayNuevosDias.push(\"Lunes\");\r\n            if(document.getElementById(\"EditarReglaCheckboxMartes\").checked)  arrayNuevosDias.push(\"Martes\");\r\n            if(document.getElementById(\"EditarReglaCheckboxMiercoles\").checked)  arrayNuevosDias.push(\"Miercoles\");\r\n            if(document.getElementById(\"EditarReglaCheckboxJueves\").checked)  arrayNuevosDias.push(\"Jueves\");\r\n            if(document.getElementById(\"EditarReglaCheckboxViernes\").checked)  arrayNuevosDias.push(\"Viernes\");\r\n            if(document.getElementById(\"EditarReglaCheckboxSabado\").checked)  arrayNuevosDias.push(\"Sabado\");\r\n            if(document.getElementById(\"EditarReglaCheckboxDomingo\").checked)  arrayNuevosDias.push(\"Domingo\");\r\n            console.log(arrayNuevosDias);\r\n            nuevaTarea.arrayNuevosDias=arrayNuevosDias;\r\n        } else {\r\n            //fecha exacta\r\n            console.log(startDate)\r\n            const fecha  = startDate.getTime()/1000;\r\n            console.log(fecha);\r\n            nuevaTarea.fecha = fecha;\r\n        }\r\n        console.log(nuevaTarea);\r\n        dispatch( updateJobAction(jobId,nuevaTarea,wialonObject) );\r\n    }\r\n    function addZero(i){\r\n        if (i < 10) {\r\n            i = \"0\" + i;\r\n        }\r\n        return i;\r\n    }\r\n    return (\r\n        <>\r\n            {\r\n                job !== undefined && job !== null ?\r\n                    <Container className=\"\">\r\n                        <Card >\r\n                            <Card.Body>\r\n                                <Card.Text>{job.nombre}</Card.Text>\r\n                                <Row>\r\n                                    <Col xs lg=\"4\">\r\n                                        <input id=\"\" style={{inlineSize:\"inherit\"}} className=\"inputBlack\" placeholder=\"Nombre\" onChange={e => setNombreRegla(e.target.value)} value={nombreTarea} />\r\n                                    </Col>\r\n                                    <Col xs lg=\"4\">\r\n                                        <DatePicker\r\n                                            className=\"inputBlack\"\r\n                                            selected={startDateHora}\r\n                                            onChange={date => setStartDateHora(date)}\r\n                                            showTimeSelect\r\n                                            showTimeSelectOnly\r\n                                            timeIntervals={15}\r\n                                            timeCaption=\"Time\"\r\n                                            dateFormat=\"HH:mm\"\r\n                                        />\r\n                                    </Col>\r\n                                    <Col xs lg=\"4\">\r\n                                        <Form>\r\n                                            <Form.Group controlId=\"SelectComandoEditarRegla\">\r\n                                                <Form.Control as=\"select\" custom>\r\n                                                    <option>Abrir</option>\r\n                                                    <option>Cerrar</option>\r\n                                                    <option>Restablecer</option>\r\n                                                </Form.Control>\r\n                                            </Form.Group>\r\n                                        </Form>\r\n                                    </Col>\r\n                                </Row>\r\n                                <label className=\"switch\">\r\n                                    <input type=\"checkbox\" onChange={ () => setToggleDate(!toggleDate) } />\r\n                                    <span className=\"slider round\"></span>\r\n                                </label>\r\n                                <br></br>\r\n                                {\r\n                                    toggleDate ?\r\n                                        <Table responsive=\"sm\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>Lun</th>\r\n                                                <th>Mar</th>\r\n                                                <th>Mie</th>\r\n                                                <th>Jue</th>\r\n                                                <th>Vie</th>\r\n                                                <th>Sab</th>\r\n                                                <th>Dom</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td><input className=\"checbokDias\" type=\"checkbox\" id=\"EditarReglaCheckboxLunes\"  /></td>\r\n                                                <td><input className=\"checbokDias\" type=\"checkbox\" id=\"EditarReglaCheckboxMartes\"  /></td>\r\n                                                <td><input className=\"checbokDias\" type=\"checkbox\" id=\"EditarReglaCheckboxMiercoles\"  /></td>\r\n                                                <td><input className=\"checbokDias\" type=\"checkbox\" id=\"EditarReglaCheckboxJueves\"  /></td>\r\n                                                <td><input className=\"checbokDias\" type=\"checkbox\" id=\"EditarReglaCheckboxViernes\"  /></td>\r\n                                                <td><input className=\"checbokDias\" type=\"checkbox\" id=\"EditarReglaCheckboxSabado\"  /></td>\r\n                                                <td><input className=\"checbokDias\" type=\"checkbox\" id=\"EditarReglaCheckboxDomingo\"  /></td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </Table>\r\n                                    :\r\n                                    <DatePicker\r\n                                        className=\"inputBlack\"\r\n                                        selected={startDate}\r\n                                        onChange={date => setStartDate(date)}\r\n                                    />\r\n                                }\r\n                                <br></br><br></br><br></br>\r\n                                <button className=\"warnigButton\" onClick={ () => setEditarRegla(false) } style={{float:\"left\"}} >Cancelar</button>\r\n                                <button className=\"successButton\" onClick={ (e) => updateJob(e) } style={{float:\"right\"}} >Agregar</button>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Container>\r\n                :\r\n                    null\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default EditarRegla;","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\store\\actions\\tareasActions.js",[],"C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\config\\CMDS.js",[],"C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\store\\reducers\\unidadesReducer.js",[],"C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\store\\reducers\\gruposReducer.js",[],"C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\store\\reducers\\CMDSReducer.js",[],"C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\store\\reducers\\usuarioReducer.js",[],"C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\store\\reducers\\tareasReducer.js",[],"C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\config\\errores.js",[],"C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\components\\DesktopContainer.js",[],"C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\pages\\UnidadesMapa.js",["183","184"],"import React, { useState } from 'react';\r\nimport { useSelector } from \"react-redux\";\r\nimport { Marker, Popup } from 'react-leaflet'\r\n\r\nconst UnidadesMapa = () => {\r\n\r\n    const jobs = useSelector(state => state.tareas.tareas);\r\n    const temp = jobs.find(job => job.id === 20);\r\n    console.log(temp)\r\n    //3657\r\n    const CMDSUnidades = useSelector(state => state.CMDS.unidadesCMDS);\r\n    let unidades = useSelector(state => state.unidades.unidades);\r\n    unidades = unidades.map(unidad => {\r\n        const unidadCcmd = CMDSUnidades.find(unidadcmd => unidadcmd.id === unidad.id);\r\n        if (unidadCcmd !== undefined) {\r\n            return unidad;\r\n        }\r\n    });\r\n    unidades= unidades.filter( unidad => unidad !== undefined);\r\n    const [unidadesModal] = useState(CMDSUnidades);\r\n    return (\r\n    <>\r\n        {\r\n            unidadesModal.map(unidad => (\r\n                unidad.pos !== null ?\r\n                    (<Marker key={unidad.id + \"M\"} position={[unidad.pos.y,unidad.pos.x]}>\r\n                        <Popup className=\"popupContainer\" >\r\n                            <div className='popupMarker'>\r\n                                Unidad: {unidad.n}\r\n                                <br></br><br></br>\r\n                                <table className=\"table\">\r\n                                    <thead>\r\n                                    <tr>\r\n                                        <th scope=\"col\">Dirección</th>\r\n                                        <th scope=\"col\">Fecha</th>\r\n                                    </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                    <tr>\r\n                                        <td>direccion</td>\r\n                                        <td>{unidad.fecha}</td>\r\n                                    </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                                Tareas\r\n                                <table className=\"table\">\r\n                                    <thead>\r\n                                    <tr>\r\n                                        <th scope=\"col\">Nombre</th>\r\n                                        <th scope=\"col\">Hora</th>\r\n                                        <th scope=\"col\">Recurrencia</th>\r\n                                        <th scope=\"col\">Comando</th>\r\n                                    </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                    {\r\n                                        jobs.map( job => {\r\n                                            return (\r\n                                                job.unidades.find(unidadJob => unidad.id === unidadJob) !== undefined ?\r\n                                                    <tr>\r\n                                                        <td>{job.nombre}</td>\r\n                                                        <td>{job.hora}</td>\r\n                                                        {\r\n                                                            job.dias.length > 0 ?\r\n                                                            <td>{job.dias.join(\", \")}</td>\r\n                                                            :\r\n                                                            <td>fechas</td>\r\n                                                        }\r\n                                                        <td>{job.comando}</td>\r\n                                                    </tr>\r\n                                                :\r\n                                                    null\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </Popup>\r\n                    </Marker>)\r\n                :\r\n                    null\r\n            ))\r\n        }\r\n    </>\r\n    );\r\n}\r\nexport default UnidadesMapa;","C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\store\\types\\index.js",[],"C:\\Users\\onavi\\Documents\\trabajo\\chapas\\wialon_api-main\\src\\pages\\Menu.js",["185","186","187","188","189","190","191","192","193","194","195","196"],"import React, { useState } from 'react';\r\nimport AuthService from \"../services/AuthService\";\r\nimport { ProSidebar, Menu, MenuItem, SidebarHeader, SidebarContent, SidebarFooter } from 'react-pro-sidebar';\r\nimport 'react-pro-sidebar/dist/css/styles.css';\r\nimport { FaCog, FaLock, FaWrench, FaSignOutAlt, FaClipboardCheck, FaDesktop, FaSatelliteDish } from 'react-icons/fa';\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { logoutUsuarioAction } from \"../store/actions/usuarioActions\";\r\nimport { logoutUnidadesAction } from \"../store/actions/unidadesActions\";\r\nimport { logoutTareasAction } from \"../store/actions/tareasActions\";\r\nimport { logoutGruposAction } from \"../store/actions/gruposActions\";\r\nimport { logoutCMDSAction } from \"../store/actions/CMDSActions\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport logo_escudo_intralix_blanco from \"../img/logo-escudo-intralix-1.png\";\r\nimport logo_chico_blanco from \"../img/logo-chico-blanco.png\";\r\n\r\n\r\nconst MenuLateral = () => {\r\n\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const [collapsed, setCollapsed] = useState(true);\r\n  const [imgHeader, setImgHeader] = useState(logo_escudo_intralix_blanco);\r\n  console.log(imgHeader)\r\n  const outSidebar = () => {\r\n    setCollapsed(true)\r\n  }\r\n\r\n  const openSidebar = () => {\r\n    setCollapsed(false);\r\n    let newImg = null;\r\n    if(collapsed){\r\n      newImg = logo_escudo_intralix_blanco;\r\n    }else{\r\n      newImg=logo_chico_blanco;\r\n    }\r\n    setImgHeader(newImg);\r\n  }\r\n\r\n  const logOut = () => {\r\n    AuthService.logout();\r\n    dispatch( logoutUsuarioAction() );\r\n    dispatch( logoutUnidadesAction() );\r\n    dispatch( logoutTareasAction() );\r\n    dispatch( logoutGruposAction() );\r\n    dispatch( logoutCMDSAction() );\r\n    history.push('/login');\r\n  }\r\n  return(\r\n    <>\r\n      <div className=\"topnav\">\r\n        <img src={logo_chico_blanco} width=\"150\" />\r\n        <div>\r\n          <Link to={'/panel'} >\r\n            <FaDesktop size=\"20\" />\r\n            Panel\r\n          </Link>\r\n            <Link to={'/Equipos'} >\r\n              <FaSatelliteDish size=\"20\" />\r\n              Equipos\r\n            </Link>\r\n            <Link to={'/Reglas'} >\r\n              <FaClipboardCheck size=\"20\" />\r\n              Reglas\r\n            </Link>\r\n            <Link className=\"salir\" onClick={() => logOut()}>\r\n              <FaSignOutAlt size=\"25\" />\r\n            </Link>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n  /*\r\n  return (\r\n    <ProSidebar\r\n      className='sidebarinicio'\r\n      collapsed={collapsed}\r\n      breakPoint=\"md\"\r\n      onMouseLeave={() => outSidebar()}\r\n    >\r\n      <SidebarHeader className=\"sidebarHeader\">\r\n        <div\r\n          style={{\r\n            padding: '15px',\r\n            textTransform: 'uppercase',\r\n            fontWeight: 'bold',\r\n            fontSize: 18,\r\n            letterSpacing: '1px',\r\n            overflow: 'hidden',\r\n            textOverflow: 'ellipsis',\r\n            whiteSpace: 'nowrap',\r\n            textAlign: \"-webkit-center\"\r\n          }}\r\n        >\r\n          {\r\n            collapsed ?\r\n            <img src={logo_escudo_intralix_blanco} width=\"50\" onClick={() => openSidebar()} />\r\n            :\r\n            <img src={logo_chico_blanco} width=\"150\" onClick={() => openSidebar()} />\r\n          }\r\n        </div>\r\n      </SidebarHeader>\r\n      <SidebarContent className=\"sidebarBody\">\r\n        <Menu iconShape=\"round\">\r\n          <MenuItem icon={<FaDesktop size=\"20\" />}>\r\n            <Link to={'/panel'} className=\"text-light\">Panel</Link>\r\n          </MenuItem>\r\n          <MenuItem icon={<FaSatelliteDish size=\"20\" />}>\r\n            <Link to={'/Equipos'} className=\"text-light\">Equipos</Link>\r\n          </MenuItem>\r\n          <MenuItem icon={<FaClipboardCheck size=\"20\" />}>\r\n            <Link to={'/Reglas'} className=\"text-light\">Reglas</Link>\r\n          </MenuItem>\r\n        </Menu>\r\n      </SidebarContent>\r\n      <SidebarFooter className=\"sidebarFooter\">\r\n          <Menu iconShape=\"circle\">\r\n            <MenuItem onClick={() => logOut()} icon={<FaSignOutAlt size=\"20\" />}>Salir</MenuItem>\r\n          </Menu>\r\n      </SidebarFooter>\r\n    </ProSidebar>\r\n  );\r\n  */\r\n}\r\nexport default MenuLateral;",{"ruleId":"197","replacedBy":"198"},{"ruleId":"199","replacedBy":"200"},{"ruleId":"201","severity":1,"message":"202","line":69,"column":15,"nodeType":"203","endLine":69,"endColumn":38},{"ruleId":"204","severity":1,"message":"205","line":9,"column":36,"nodeType":"206","messageId":"207","endLine":9,"endColumn":38},{"ruleId":"208","severity":1,"message":"209","line":31,"column":8,"nodeType":"210","endLine":31,"endColumn":16,"suggestions":"211"},{"ruleId":"204","severity":1,"message":"212","line":42,"column":34,"nodeType":"206","messageId":"213","endLine":42,"endColumn":36},{"ruleId":"204","severity":1,"message":"212","line":58,"column":34,"nodeType":"206","messageId":"213","endLine":58,"endColumn":36},{"ruleId":"204","severity":1,"message":"205","line":120,"column":49,"nodeType":"206","messageId":"207","endLine":120,"endColumn":51},{"ruleId":"208","severity":1,"message":"214","line":20,"column":5,"nodeType":"210","endLine":20,"endColumn":7,"suggestions":"215"},{"ruleId":"216","severity":1,"message":"217","line":21,"column":11,"nodeType":"218","messageId":"219","endLine":21,"endColumn":18},{"ruleId":"204","severity":1,"message":"205","line":26,"column":41,"nodeType":"206","messageId":"207","endLine":26,"endColumn":43},{"ruleId":"204","severity":1,"message":"205","line":27,"column":52,"nodeType":"206","messageId":"207","endLine":27,"endColumn":54},{"ruleId":"216","severity":1,"message":"220","line":54,"column":12,"nodeType":"218","messageId":"219","endLine":54,"endColumn":29},{"ruleId":"208","severity":1,"message":"221","line":64,"column":8,"nodeType":"210","endLine":64,"endColumn":14,"suggestions":"222"},{"ruleId":"223","severity":1,"message":"224","line":83,"column":21,"nodeType":"218","messageId":"225","endLine":83,"endColumn":26},{"ruleId":"223","severity":1,"message":"226","line":84,"column":25,"nodeType":"218","messageId":"225","endLine":84,"endColumn":26},{"ruleId":"223","severity":1,"message":"224","line":104,"column":29,"nodeType":"218","messageId":"225","endLine":104,"endColumn":34},{"ruleId":"223","severity":1,"message":"226","line":105,"column":33,"nodeType":"218","messageId":"225","endLine":105,"endColumn":34},{"ruleId":"204","severity":1,"message":"212","line":165,"column":30,"nodeType":"206","messageId":"213","endLine":165,"endColumn":32},{"ruleId":"201","severity":1,"message":"202","line":387,"column":29,"nodeType":"203","endLine":387,"endColumn":52},{"ruleId":"204","severity":1,"message":"205","line":14,"column":37,"nodeType":"206","messageId":"207","endLine":14,"endColumn":39},{"ruleId":"204","severity":1,"message":"205","line":15,"column":48,"nodeType":"206","messageId":"207","endLine":15,"endColumn":50},{"ruleId":"204","severity":1,"message":"212","line":87,"column":26,"nodeType":"206","messageId":"213","endLine":87,"endColumn":28},{"ruleId":"204","severity":1,"message":"212","line":17,"column":29,"nodeType":"206","messageId":"213","endLine":17,"endColumn":31},{"ruleId":"204","severity":1,"message":"212","line":35,"column":34,"nodeType":"206","messageId":"213","endLine":35,"endColumn":36},{"ruleId":"204","severity":1,"message":"212","line":63,"column":32,"nodeType":"206","messageId":"213","endLine":63,"endColumn":34},{"ruleId":"204","severity":1,"message":"212","line":80,"column":33,"nodeType":"206","messageId":"213","endLine":80,"endColumn":35},{"ruleId":"216","severity":1,"message":"227","line":201,"column":27,"nodeType":"218","messageId":"219","endLine":201,"endColumn":36},{"ruleId":"216","severity":1,"message":"227","line":261,"column":27,"nodeType":"218","messageId":"219","endLine":261,"endColumn":36},{"ruleId":"208","severity":1,"message":"228","line":32,"column":8,"nodeType":"210","endLine":32,"endColumn":10,"suggestions":"229"},{"ruleId":"204","severity":1,"message":"205","line":13,"column":36,"nodeType":"206","messageId":"207","endLine":13,"endColumn":38},{"ruleId":"216","severity":1,"message":"230","line":19,"column":15,"nodeType":"218","messageId":"219","endLine":19,"endColumn":23},{"ruleId":"216","severity":1,"message":"231","line":3,"column":10,"nodeType":"218","messageId":"219","endLine":3,"endColumn":20},{"ruleId":"216","severity":1,"message":"232","line":3,"column":22,"nodeType":"218","messageId":"219","endLine":3,"endColumn":26},{"ruleId":"216","severity":1,"message":"233","line":3,"column":28,"nodeType":"218","messageId":"219","endLine":3,"endColumn":36},{"ruleId":"216","severity":1,"message":"234","line":3,"column":38,"nodeType":"218","messageId":"219","endLine":3,"endColumn":51},{"ruleId":"216","severity":1,"message":"235","line":3,"column":53,"nodeType":"218","messageId":"219","endLine":3,"endColumn":67},{"ruleId":"216","severity":1,"message":"236","line":3,"column":69,"nodeType":"218","messageId":"219","endLine":3,"endColumn":82},{"ruleId":"216","severity":1,"message":"237","line":5,"column":10,"nodeType":"218","messageId":"219","endLine":5,"endColumn":15},{"ruleId":"216","severity":1,"message":"238","line":5,"column":17,"nodeType":"218","messageId":"219","endLine":5,"endColumn":23},{"ruleId":"216","severity":1,"message":"239","line":5,"column":25,"nodeType":"218","messageId":"219","endLine":5,"endColumn":33},{"ruleId":"216","severity":1,"message":"240","line":28,"column":9,"nodeType":"218","messageId":"219","endLine":28,"endColumn":19},{"ruleId":"216","severity":1,"message":"241","line":32,"column":9,"nodeType":"218","messageId":"219","endLine":32,"endColumn":20},{"ruleId":"201","severity":1,"message":"202","line":55,"column":9,"nodeType":"203","endLine":55,"endColumn":52},"no-native-reassign",["242"],"no-negated-in-lhs",["243"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'cofirmDelete' and 'loadingEquipos'. Either include them or remove the dependency array.","ArrayExpression",["244"],"Array.prototype.map() expects a return value from arrow function.","expectedInside","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.",["245"],"no-unused-vars","'usuario' is assigned a value but never used.","Identifier","unusedVar","'comandoNuevaRegla' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'jobsModal'. Either include it or remove the dependency array. You can also do a functional update 'setJobsModal(j => ...)' if you only need 'jobsModal' in the 'setJobsModal' call.",["246"],"no-redeclare","'total' is already defined.","redeclared","'i' is already defined.","'creatorId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'job'. Either include it or remove the dependency array.",["247"],"'unidades' is assigned a value but never used.","'ProSidebar' is defined but never used.","'Menu' is defined but never used.","'MenuItem' is defined but never used.","'SidebarHeader' is defined but never used.","'SidebarContent' is defined but never used.","'SidebarFooter' is defined but never used.","'FaCog' is defined but never used.","'FaLock' is defined but never used.","'FaWrench' is defined but never used.","'outSidebar' is assigned a value but never used.","'openSidebar' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"248","fix":"249"},{"desc":"250","fix":"251"},{"desc":"252","fix":"253"},{"desc":"254","fix":"255"},"Update the dependencies array to be: [cofirmDelete, grupos, loadingEquipos]",{"range":"256","text":"257"},"Update the dependencies array to be: [dispatch, history]",{"range":"258","text":"259"},"Update the dependencies array to be: [jobs, jobsModal]",{"range":"260","text":"261"},"Update the dependencies array to be: [job]",{"range":"262","text":"263"},[1566,1574],"[cofirmDelete, grupos, loadingEquipos]",[527,529],"[dispatch, history]",[2927,2933],"[jobs, jobsModal]",[1459,1461],"[job]"]